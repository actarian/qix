{"version":3,"file":"src/js/main.js","sources":["../../src/js/game/geometry/vector2.js","../../src/js/game/canvas.js","../../node_modules/@babel/runtime/helpers/inheritsLoose.js","../../src/js/game/state.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../src/js/game/geometry/segment.js","../../src/js/game/geometry/polygon.js","../../src/js/game/cut.js","../../src/js/game/enemy.js","../../src/js/game/geometry/rect.js","../../src/js/game/ground.js","../../src/js/game/player.js","../../src/js/game/resources.js","../../src/js/game/game.js","../../src/js/main.js"],"sourcesContent":["export default class Vector2 {\n\n\tconstructor(x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tset(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetScalar(scalar) {\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\treturn this;\n\t}\n\n\tsetX(x) {\n\t\tthis.x = x;\n\t\treturn this;\n\t}\n\n\tsetY(y) {\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetComponent(index, value) {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetComponent(index) {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn this.x;\n\t\t\tcase 1:\n\t\t\t\treturn this.y;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t}\n\n\t}\n\n\tclone() {\n\t\treturn new this.constructor(this.x, this.y);\n\t}\n\n\tcopy(v) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\treturn this;\n\t}\n\n\tadd(v, w) {\n\t\tif (w !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\treturn this.addVectors(v, w);\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\treturn this;\n\t}\n\n\taddScalar(s) {\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\treturn this;\n\t}\n\n\taddVectors(a, b) {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\treturn this;\n\t}\n\n\taddScaledVector(v, s) {\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\treturn this;\n\t}\n\n\tsub(v, w) {\n\t\tif (w !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\treturn this.subVectors(v, w);\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\treturn this;\n\t}\n\n\tsubScalar(s) {\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\treturn this;\n\t}\n\n\tsubVectors(a, b) {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\treturn this;\n\t}\n\n\tmultiply(v) {\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\treturn this;\n\t}\n\n\tmultiplyScalar(scalar) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\treturn this;\n\t}\n\n\tdivideScalar(scalar) {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tapplyMatrix3(m) {\n\t\tvar x = this.x,\n\t\t\ty = this.y;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\treturn this;\n\t}\n\n\tmin(v) {\n\t\tthis.x = Math.min(this.x, v.x);\n\t\tthis.y = Math.min(this.y, v.y);\n\t\treturn this;\n\t}\n\n\tmax(v) {\n\t\tthis.x = Math.max(this.x, v.x);\n\t\tthis.y = Math.max(this.y, v.y);\n\t\treturn this;\n\t}\n\n\tclamp(min, max) {\n\t\t// assumes min < max, componentwise\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\treturn this;\n\t}\n\n\tclampScalar(minVal, maxVal) {\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\treturn this;\n\t}\n\n\tclampLength(min, max) {\n\t\tvar length = this.length();\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t}\n\n\tfloor() {\n\t\tthis.x = Math.floor(this.x);\n\t\tthis.y = Math.floor(this.y);\n\t\treturn this;\n\t}\n\n\tceil() {\n\t\tthis.x = Math.ceil(this.x);\n\t\tthis.y = Math.ceil(this.y);\n\t\treturn this;\n\t}\n\n\tround() {\n\t\tthis.x = Math.round(this.x);\n\t\tthis.y = Math.round(this.y);\n\t\treturn this;\n\t}\n\n\troundToZero() {\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n\t\treturn this;\n\t}\n\n\tnegate() {\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\treturn this;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y;\n\t}\n\n\tcross(v) {\n\t\treturn this.x * v.y - this.y * v.x;\n\t}\n\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t}\n\n\tnormalize() {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\tangle() {\n\t\t// computes the angle in radians with respect to the positive x-axis\n\t\tvar angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\treturn angle;\n\t}\n\n\tdistanceTo(v) {\n\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t}\n\n\tdistanceToSquared(v) {\n\t\tvar dx = this.x - v.x,\n\t\t\tdy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\n\tmanhattanDistanceTo(v) {\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t}\n\n\tsetLength(length) {\n\t\treturn this.normalize().multiplyScalar(length);\n\t}\n\n\tlerp(v, alpha) {\n\t\tthis.x += (v.x - this.x) * alpha;\n\t\tthis.y += (v.y - this.y) * alpha;\n\t\treturn this;\n\t}\n\n\tlerpVectors(v1, v2, alpha) {\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n\t}\n\n\tequals(v) {\n\t\treturn ((v.x === this.x) && (v.y === this.y));\n\t}\n\n\tfromArray(array, offset) {\n\t\tif (offset === undefined) offset = 0;\n\t\tthis.x = array[offset];\n\t\tthis.y = array[offset + 1];\n\t\treturn this;\n\t}\n\n\ttoArray(array, offset) {\n\t\tif (array === undefined) array = [];\n\t\tif (offset === undefined) offset = 0;\n\t\tarray[offset] = this.x;\n\t\tarray[offset + 1] = this.y;\n\t\treturn array;\n\t}\n\n\tfromBufferAttribute(attribute, index, offset) {\n\t\tif (offset !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t}\n\n\t\tthis.x = attribute.getX(index);\n\t\tthis.y = attribute.getY(index);\n\t\treturn this;\n\t}\n\n\trotateAround(center, angle) {\n\t\tvar c = Math.cos(angle),\n\t\t\ts = Math.sin(angle);\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\t\treturn this;\n\t}\n\n\trandom() {\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\treturn this;\n\t}\n\n}\n","import Vector2 from './geometry/vector2';\n\nexport default class Canvas {\n\n\tconstructor(width, height) {\n\t\tconst canvas = this.canvas = document.querySelector('.game .canvas');\n\t\twidth = width || canvas.offsetWidth;\n\t\theight = height || canvas.offsetHeight;\n\t\tconst size = this.size = new Vector2(width, height);\n\t\tcanvas.width = size.x;\n\t\tcanvas.height = size.y;\n\t\tthis.ctx = canvas.getContext('2d');\n\t}\n\n\tupdate() {\n\t\tconst size = this.size;\n\t\tconst ctx = this.ctx;\n\t\tctx.clearRect(0, 0, size.x, size.y);\n\t}\n\n\tdrawPoint(p) {\n\t\tconst ctx = this.ctx;\n\t\tctx.beginPath();\n\t\tctx.arc(p.x, p.y, 4, 0, 2 * Math.PI);\n\t\tctx.lineWidth = 2;\n\t\tctx.strokeStyle = \"red\";\n\t\tctx.stroke();\n\t}\n\n\tdrawSegment(s) {\n\t\tconst ctx = this.ctx;\n\t\tctx.beginPath();\n\t\tctx.moveTo(s.a.x, s.a.y);\n\t\tctx.lineTo(s.b.x, s.b.y);\n\t\tctx.lineWidth = 2;\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t}\n\n\tdrawImage(image, x, y, scale, rotation) {\n\t\tconst ctx = this.ctx;\n\t\tctx.setTransform(scale, 0, 0, scale, x, y); // sets scale and origin\n\t\tctx.rotate(rotation);\n\t\tctx.drawImage(image, -image.naturalWidth / 2, -image.naturalWidth / 2);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t}\n\n\tdrawImageCenter(image, x, y, cx, cy, scale, rotation) {\n\t\tconst ctx = this.ctx;\n\t\tctx.setTransform(scale, 0, 0, scale, x, y); // sets scale and origin\n\t\tctx.rotate(rotation);\n\t\tctx.drawImage(image, -cx, -cy);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t}\n\n\t/*\n\tresize() {\n\t\tconst canvas = this.canvas;\n\t\tconst rect = this.rect;\n\t\trect.width = canvas.offsetWidth;\n\t\trect.height = canvas.offsetHeight;\n\t\tcanvas.width = rect.width;\n\t\tcanvas.height = rect.height;\n\t}\n\t*/\n\n}\n","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","export const State = {\n\tpaused: false,\n\tended: false,\n\twon: false,\n\tlost: false,\n\tkeys: {},\n\tscore: 0,\n\tarea: 0,\n\tminEnemies: 2,\n\tmaxEnemies: 6,\n\taddEnemy: () => {},\n\tremoveEnemy: () => {},\n\taddScore: () => {},\n\taddEnemyScore: () => {},\n\tonPlayerCut: () => {},\n\tonPlayerReset: () => {},\n};\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","import Vector2 from \"./vector2\";\n\nexport default class Segment {\n\n\tget ax() {\n\t\treturn this.a.x;\n\t}\n\tset ax(x) {\n\t\tthis.a.x = x;\n\t}\n\tget ay() {\n\t\treturn this.a.y;\n\t}\n\tset ay(y) {\n\t\tthis.a.y = y;\n\t}\n\tget bx() {\n\t\treturn this.b.x;\n\t}\n\tset bx(x) {\n\t\tthis.b.x = x;\n\t}\n\tget by() {\n\t\treturn this.b.y;\n\t}\n\tset by(y) {\n\t\tthis.b.y = y;\n\t}\n\n\tconstructor(ax = 0, ay = 0, bx = 0, by = 0) {\n\t\tthis.a = new Vector2(ax, ay);\n\t\tthis.b = new Vector2(bx, by);\n\t}\n\n\tdraw() {\n\t\tdrawSegment(this);\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\t}\n\n\tbounce(s) {\n\t\tconst i = this.intersect(s);\n\t\tif (i) {\n\t\t\tconst r = this.reflect(i, s.b);\n\t\t\tconst d = new Vector2(r.x - i.x, r.y - i.y).normalize();\n\t\t\treturn { r, d };\n\t\t}\n\t}\n\n\tintersect(s) {\n\t\tconst i = this.getIntersection(s);\n\t\tif (i && i.intersectA && i.intersectB) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treflect(intersection, rayTip) {\n\t\tconst n = this.normal();\n\t\tconst v = new Vector2(\n\t\t\trayTip.x - intersection.x,\n\t\t\trayTip.y - intersection.y\n\t\t);\n\t\tconst d = n.dot(v);\n\t\tconst dotNormal = new Vector2(d * n.x, d * n.y);\n\t\tconst reflection = new Vector2(\n\t\t\trayTip.x - dotNormal.x * 2,\n\t\t\trayTip.y - dotNormal.y * 2\n\t\t);\n\t\t// console.log(dotNormal, intersection, rayTip);\n\t\treturn reflection;\n\t\t// console.log(direction);\n\t}\n\n\tnormal(p) {\n\t\tconst dx = this.b.x - this.a.x;\n\t\tconst dy = this.b.y - this.a.y;\n\t\t// const n = new Vector2(-dy, dx); // then the normals are (-dy, dx) and (dy, -dx).\n\t\tconst n = new Vector2(dy, -dx);\n\t\treturn n.normalize();\n\t}\n\n\tvector(iX, iY, rayTipX, rayTipY) {\n\t\tconst rayX = rayTipX - iX;\n\t\tconst rayY = rayTipY - iY;\n\t\treturn new Vector2(rayX, rayY);\n\t}\n\n\tgetIntersection(s) {\n\t\t// if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t\tlet denominator,\n\t\t\ta,\n\t\t\tb,\n\t\t\tnumerator1,\n\t\t\tnumerator2,\n\t\t\tresult = new Vector2();\n\t\t/*\n\t\t{\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tintersectA: false,\n\t\t\tintersectB: false\n\t\t};\n\t\t*/\n\t\tdenominator =\n\t\t\t(this.b.y - this.a.y) * (s.b.x - s.a.x) -\n\t\t\t(this.b.x - this.a.x) * (s.b.y - s.a.y);\n\t\tif (denominator === 0) {\n\t\t\treturn result;\n\t\t}\n\t\ta = s.a.y - this.a.y;\n\t\tb = s.a.x - this.a.x;\n\t\tnumerator1 = (this.b.x - this.a.x) * a - (this.b.y - this.a.y) * b;\n\t\tnumerator2 = (s.b.x - s.a.x) * a - (s.b.y - s.a.y) * b;\n\t\ta = numerator1 / denominator;\n\t\tb = numerator2 / denominator;\n\t\t// if we cast these lines infinitely in both directions, they intersect here:\n\t\tresult.x = s.a.x + a * (s.b.x - s.a.x);\n\t\tresult.y = s.a.y + a * (s.b.y - s.a.y);\n\t\t/*\n\t\t// it is worth noting that this should be the same as:\n\t\tx = this.a.x + (b * (this.b.x - this.a.x));\n\t\ty = this.a.x + (b * (this.b.y - this.a.y));\n\t\t*/\n\t\t// if line1 is a segment and line2 is infinite, they intersect if:\n\t\tif (a > 0 && a < 1) {\n\t\t\tresult.intersectA = true;\n\t\t}\n\t\t// if line2 is a segment and line1 is infinite, they intersect if:\n\t\tif (b > 0 && b < 1) {\n\t\t\tresult.intersectB = true;\n\t\t}\n\t\t// if line1 and line2 are segments, they intersect if both of the above are true\n\t\treturn result;\n\t}\n\n\thit(actor, tolerance) {\n\t\tconst hit = Segment.calcIsInsideThickLineSegment(actor.segment.b.x, actor.segment.b.y, this.ax, this.ay, this.bx, this.by, tolerance);\n\t\tif (hit) {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\t// The most useful function. Returns bool true, if the mouse point is actually inside the (finite) line, given a line thickness from the theoretical line away. It also assumes that the line end points are circular, not square.\n\tstatic calcIsInsideThickLineSegment(px, py, ax, ay, bx, by, tolerance = 0.1) {\n\t\tconst L2 = ((bx - ax) * (bx - ax) + (by - ay) * (by - ay));\n\t\tif (L2 == 0) return false;\n\t\tconst r = ((px - ax) * (bx - ax) + (py - ay) * (by - ay)) / L2;\n\t\t// Assume line thickness is circular\n\t\tif (r < 0) {\n\t\t\t// Outside a\n\t\t\treturn (Math.sqrt((ax - px) * (ax - px) + (ay - py) * (ay - py)) <= tolerance);\n\t\t} else if ((0 <= r) && (r <= 1)) {\n\t\t\t// On the line segment\n\t\t\tvar s = ((ay - py) * (bx - ax) - (ax - px) * (by - ay)) / L2;\n\t\t\treturn (Math.abs(s) * Math.sqrt(L2) <= tolerance);\n\t\t} else {\n\t\t\t// Outside b\n\t\t\treturn (Math.sqrt((bx - px) * (bx - px) + (by - py) * (by - py)) <= tolerance);\n\t\t}\n\t}\n\n}\n","import { State } from '../state';\nimport Segment from './segment';\n\nexport default class Polygon {\n\n\tconstructor(points) {\n\t\tthis.segments = [];\n\t\tif (points && points.length > 1) {\n\t\t\tpoints.forEach((p, i) => {\n\t\t\t\tif (i < points.length - 2) {\n\t\t\t\t\tthis.segments.push(new Segment(p[0], p[1], points[i + 1][0], points[i + 1][1]));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetArea() {\n\t\tconst points = this.getPoints();\n\t\treturn this.getAreaFromPoints(points);\n\t}\n\n\tgetAreaFromPoints(points) {\n\t\tlet area = 0;\n\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\tconst addX = points[i].x;\n\t\t\tconst addY = points[i == l - 1 ? 0 : i + 1].y;\n\t\t\tconst subX = points[i == l - 1 ? 0 : i + 1].x;\n\t\t\tconst subY = points[i].y;\n\t\t\tarea += (addX * addY * 0.5);\n\t\t\tarea -= (subX * subY * 0.5);\n\t\t}\n\t\treturn Math.abs(area);\n\t}\n\n\trebuild(points) {\n\t\tconst segments = [];\n\t\tfor (let i = 0; i < points.length - 1; i++) {\n\t\t\tconst p = points[i];\n\t\t\tsegments.push(new Segment(p.x, p.y, points[i + 1].x, points[i + 1].y));\n\t\t}\n\t\tthis.segments = segments;\n\t\t// console.log('segments', segments);\n\t}\n\n\thit(actor, tolerance) {\n\t\tfor (let i = 0; i < this.segments.length; i++) {\n\t\t\tconst s = this.segments[i].hit(actor, tolerance);\n\t\t\tif (s) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t\t/*\n\t\treturn this.segments.reduce((p, c) => {\n\t\t\treturn p || c.hit(actor, tolerance);\n\t\t}, false);\n\t\t*/\n\t}\n\n\thitSegments(actor, tolerance) {\n\t\tfor (let i = 0; i < this.segments.length - 1; i++) {\n\t\t\tconst s = this.segments[i].hit(actor, tolerance);\n\t\t\tif (s) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t}\n\n\tintersect(actor) {\n\t\treturn this.segments.reduce((p, c) => {\n\t\t\treturn p || c.intersect(actor.segment);\n\t\t}, false);\n\t}\n\n\tisInside(actor) {\n\t\tconst points = this.getPoints();\n\t\treturn this.isPointInside(actor.position, points);\n\t}\n\n\twillBeInside(actor) {\n\t\tconst points = this.getPoints();\n\t\treturn this.isPointInside(actor.segment.b, points);\n\t}\n\n\tbounce(segment) {\n\t\tfor (let i = 0; i < this.segments.length; i++) {\n\t\t\tconst bounce = this.segments[i].bounce(segment);\n\t\t\tif (bounce) {\n\t\t\t\treturn bounce;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.lineWidth = \"5\";\n\t\tctx.strokeStyle = \"green\";\n\t\tctx.fillStyle = \"black\";\n\t\tconst t = this.segments.length;\n\t\tfor (let i = 0; i < t; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t}\n\t\t\tif (i === t - 1) {\n\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t}\n\t\t}\n\t\tctx.stroke();\n\t\tctx.fill();\n\t}\n\n\tgetPoints(closed) {\n\t\tconst points = [];\n\t\tfor (let i = 0; i < this.segments.length; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tpoints.push(s.a);\n\t\t}\n\t\tif (this.segments.length && closed) {\n\t\t\tpoints.push(this.segments[this.segments.length - 1].b);\n\t\t}\n\t\treturn points;\n\t}\n\n\tIsClockwise(points) {\n\t\tlet sum = 0;\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst a = points[i];\n\t\t\tconst b = points[(i + 1) % points.length];\n\t\t\tsum += (b.x - a.x) * (b.y + a.y);\n\t\t}\n\t\treturn sum < 0;\n\t}\n\n\tisPointInside(p, points) {\n\t\tlet inside = false;\n\t\tlet minX = points[0].x,\n\t\t\tmaxX = points[0].x;\n\t\tlet minY = points[0].y,\n\t\t\tmaxY = points[0].y;\n\t\tfor (let n = 1; n < points.length; n++) {\n\t\t\tconst q = points[n];\n\t\t\tminX = Math.min(q.x, minX);\n\t\t\tmaxX = Math.max(q.x, maxX);\n\t\t\tminY = Math.min(q.y, minY);\n\t\t\tmaxY = Math.max(q.y, maxY);\n\t\t}\n\t\tif (p.x < minX || p.x > maxX || p.y < minY || p.y > maxY) {\n\t\t\treturn false;\n\t\t}\n\t\tlet i = 0,\n\t\t\tj = points.length - 1;\n\t\tfor (i, j; i < points.length; j = i++) {\n\t\t\tif ((points[i].y > p.y) != (points[j].y > p.y) && p.x < (points[j].x - points[i].x) * (p.y - points[i].y) / (points[j].y - points[i].y) + points[i].x) {\n\t\t\t\tinside = !inside;\n\t\t\t}\n\t\t}\n\t\treturn inside;\n\t}\n\n}\n","import Polygon from './geometry/polygon';\nimport Segment from './geometry/segment';\nimport Vector2 from './geometry/vector2';\nimport { State } from './state';\n\nexport default class Cut extends Polygon {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.direction = new Vector2();\n\t\tthis.start = new Vector2();\n\t\tthis.end = new Vector2();\n\t}\n\n\tmove(actor) {\n\t\tlet segment;\n\t\tif (!this.segments.length) {\n\t\t\tthis.start.copy(actor.position);\n\t\t\tsegment = new Segment(actor.position.x, actor.position.y, actor.nx, actor.ny);\n\t\t\tthis.segments.push(segment);\n\t\t} else if (Math.abs(this.direction.x) !== Math.abs(actor.direction.x)) { // direction changed\n\t\t\tconst s = this.segments[this.segments.length - 1];\n\t\t\tsegment = new Segment(s.b.x, s.b.y, actor.nx, actor.ny);\n\t\t\tthis.segments.push(segment);\n\t\t} else {\n\t\t\tsegment = this.segments[this.segments.length - 1];\n\t\t\tsegment.b.x = actor.nx;\n\t\t\tsegment.b.y = actor.ny;\n\t\t}\n\t\tthis.end.x = segment.b.x;\n\t\tthis.end.y = segment.b.y;\n\t\tthis.direction.x = actor.direction.x;\n\t\tthis.direction.y = actor.direction.y;\n\t}\n\n\tclose(actor) {\n\t\tthis.segments = [];\n\t}\n\n\treset(actor) {\n\t\tactor.position.copy(this.start);\n\t\tthis.direction.x = 0;\n\t\tthis.direction.y = 0;\n\t\tthis.segments = [];\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tconst t = this.segments.length;\n\t\tfor (let i = 0; i < t; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t}\n\t\t\tif (i === t - 1) {\n\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t}\n\t\t}\n\t\tctx.lineWidth = \"7\";\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.stroke();\n\t\tctx.lineWidth = \"3\";\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t}\n\n}\n","import Segment from './geometry/segment';\nimport Vector2 from './geometry/vector2';\nimport { State } from './state';\n\nexport default class Enemy {\n\n\tget nx() {\n\t\treturn this.position.x + this.direction.x * this.speed;\n\t}\n\n\tget ny() {\n\t\treturn this.position.y + this.direction.y * this.speed;\n\t}\n\n\tconstructor() {\n\t\tthis.position = new Vector2();\n\t\tthis.getRandomPosition();\n\t\t/*\n\t\tif (State.enemies && State.enemies.length) {\n\t\t\tthis.getRandomPosition();\n\t\t} else {\n\t\t\tthis.getCenterPosition();\n\t\t}\n\t\t*/\n\t\tthis.getRandomDirection();\n\t\tthis.speed = 3; // 2 + Math.random() * 2;\n\t\tthis.segment = new Segment();\n\t}\n\n\tgetCenterPosition() {\n\t\tconst ground = State.ground;\n\t\tthis.position.x = ground.x(0.5);\n\t\tthis.position.y = ground.y(0.5);\n\t}\n\n\tgetRandomPosition() {\n\t\tconst ground = State.ground;\n\t\tthis.position.x = ground.x(Math.random());\n\t\tthis.position.y = ground.y(Math.random());\n\t\tif (!ground.isInside(this)) {\n\t\t\tthis.getRandomPosition();\n\t\t}\n\t}\n\n\tgetRandomDirection() {\n\t\tthis.direction = new Vector2(0.5 + Math.random() * 0.5 * (Math.random() > 0.5 ? 1 : -1), 0.5 + Math.random() * 0.5 * (Math.random() > 0.5 ? 1 : -1)).normalize();\n\t}\n\n\tupdate() {\n\t\tif (!this.checkCollision()) {\n\t\t\tthis.move();\n\t\t}\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tconst mouth = State.resources.get(State.assets.mouth);\n\t\tctx.drawImage(mouth, this.position.x - mouth.naturalWidth / 2, this.position.y - mouth.naturalHeight / 2);\n\t\t/*\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.arc(this.position.x, this.position.y, 5, 0, 2 * Math.PI, true);\n\t\tctx.stroke();\n\t\tctx.fillStyle = \"red\";\n\t\tctx.fill();\n\t\t*/\n\t}\n\n\tcheckCollision() {\n\t\tconst ground = State.ground;\n\t\tconst cut = State.cut;\n\t\tconst nx = this.nx;\n\t\tconst ny = this.ny;\n\t\tconst mouth = State.resources.get(State.assets.mouth);\n\t\tconst segment = this.segment;\n\t\tsegment.a.set(this.position.x, this.position.y);\n\t\tsegment.b.set(\n\t\t\tthis.position.x + this.direction.x * (mouth.naturalHeight / 2 + this.speed),\n\t\t\tthis.position.y + this.direction.y * (mouth.naturalHeight / 2 + this.speed),\n\t\t);\n\t\tif (cut.hit(this, mouth.naturalHeight / 2)) {\n\t\t\tconst player = State.player;\n\t\t\tcut.reset(player);\n\t\t}\n\t\tconst bounce = ground.bounce(segment);\n\t\tif (bounce) {\n\t\t\t// this.position.copy(bounce.r);\n\t\t\t// this.direction.x *= -1;\n\t\t\t// this.direction.y *= -1;\n\t\t\tthis.direction.copy(bounce.d);\n\t\t}\n\t\t/*\n\t\telse if (Math.random() * 100 < 1) {\n\t\t\tthis.getRandomDirection();\n\t\t}\n\t\t*/\n\t\treturn bounce;\n\t}\n\n\tmove() {\n\t\tthis.position.x = this.nx;\n\t\tthis.position.y = this.ny;\n\t}\n\n}\n","export default class Rect {\n\n\tconstructor(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.set();\n\t}\n\n\tset() {\n\t\tthis.top = this.y;\n\t\tthis.left = this.x;\n\t\tthis.right = this.left + this.width;\n\t\tthis.bottom = this.top + this.height;\n\t\tthis.setCenter();\n\t}\n\n\tstatic contains(rect, left, top) {\n\t\treturn rect.top <= top && top <= rect.bottom && rect.left <= left && left <= rect.right;\n\t}\n\n\tstatic intersectRect(r1, r2) {\n\t\treturn !(r2.left > r1.right ||\n\t\t\tr2.right < r1.left ||\n\t\t\tr2.top > r1.bottom ||\n\t\t\tr2.bottom < r1.top);\n\t}\n\n\tstatic fromNode(node) {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst rect = node.rect_ || (node.rect_ = new Rect());\n\t\tconst rects = node.getClientRects();\n\t\tif (!rects.length) {\n\t\t\t// console.log(rects, node);\n\t\t\treturn rect;\n\t\t}\n\t\tconst boundingRect = node.getBoundingClientRect();\n\t\t// rect.top: boundingRect.top + defaultView.pageYOffset,\n\t\t// rect.left: boundingRect.left + defaultView.pageXOffset,\n\t\trect.x = boundingRect.left;\n\t\trect.y = boundingRect.top;\n\t\trect.top = boundingRect.top;\n\t\trect.left = boundingRect.left;\n\t\trect.width = boundingRect.width;\n\t\trect.height = boundingRect.height;\n\t\trect.right = rect.left + rect.width;\n\t\trect.bottom = rect.top + rect.height;\n\t\trect.setCenter();\n\t\treturn rect;\n\t}\n\n\tsetSize(w, h) {\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis.right = this.left + this.width;\n\t\tthis.bottom = this.top + this.height;\n\t\tthis.setCenter();\n\t\t// console.log(w, h);\n\t}\n\n\tsetCenter() {\n\t\tconst center = this.center || (this.center = {});\n\t\tcenter.top = this.top + this.height / 2;\n\t\tcenter.left = this.left + this.width / 2;\n\t\tcenter.x = center.left;\n\t\tcenter.y = center.top;\n\t}\n\n\tcontains(left, top) {\n\t\treturn Rect.contains(this, left, top);\n\t}\n\n\tintersect(rect) {\n\t\treturn Rect.intersectRect(this, rect);\n\t}\n\n\tintersection(rect) {\n\t\tconst intersection = this.intersection_ || (this.intersection_ = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tpow: {\n\t\t\t\tx: -1,\n\t\t\t\ty: -1\n\t\t\t},\n\t\t\toffset: function(offset) {\n\t\t\t\toffset = offset || 0;\n\t\t\t\tconst pow = (this.top - this.rect.height / 2 + offset) / -this.height;\n\t\t\t\treturn pow;\n\t\t\t},\n\t\t\tscroll: function(offset) {\n\t\t\t\toffset = offset || 0;\n\t\t\t\tconst pow = (this.top - this.rect.height / 2 + offset) / -this.height;\n\t\t\t\treturn pow;\n\t\t\t}\n\t\t});\n\t\tintersection.left = this.left;\n\t\tintersection.top = this.top;\n\t\tintersection.width = this.width;\n\t\tintersection.height = this.height;\n\t\tintersection.x = this.left + this.width / 2;\n\t\tintersection.y = this.top + this.height / 2;\n\t\tintersection.rect = rect;\n\t\tconst pow = intersection.offset(0);\n\t\tintersection.pow.y = pow;\n\t\treturn intersection;\n\t}\n\n}\n","import Polygon from './geometry/polygon';\nimport Rect from './geometry/rect';\nimport Segment from './geometry/segment';\nimport { State } from './state';\n\nexport default class Ground extends Polygon {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst canvas = State.canvas;\n\t\tthis.rect = new Rect(50, 50, canvas.size.x - 100, canvas.size.y - 100);\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tconst rect = this.rect;\n\t\tthis.segments = [\n\t\t\tnew Segment(rect.left, rect.top, rect.right, rect.top), // top\n\t\t\tnew Segment(rect.right, rect.top, rect.right, rect.bottom), // right\n\t\t\tnew Segment(rect.right, rect.bottom, rect.left, rect.bottom), // bottom\n\t\t\tnew Segment(rect.left, rect.bottom, rect.left, rect.top), // left\n\t\t];\n\t\tState.totalArea = this.getArea();\n\t\t// console.log('State.totalArea', State.totalArea);\n\t}\n\n\tremove(polygon, firstSegment, lastSegment) {\n\t\tif (polygon.segments.length) {\n\t\t\tconst cutPoints = polygon.getPoints(true);\n\t\t\tconst isClockWise = firstSegment === lastSegment && polygon.IsClockwise(cutPoints.slice());\n\t\t\tconst forwardPoints = this.getForwardPoints(cutPoints, firstSegment, lastSegment, isClockWise);\n\t\t\tconst backwardPoints = this.getBackwardPoints(cutPoints, firstSegment, lastSegment, isClockWise);\n\t\t\tconst a1 = this.getAreaFromPoints(forwardPoints);\n\t\t\tconst a2 = this.getAreaFromPoints(backwardPoints);\n\t\t\tif (a1 > a2) {\n\t\t\t\tthis.rebuild(forwardPoints);\n\t\t\t} else {\n\t\t\t\tthis.rebuild(backwardPoints);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetForwardPoints(cutPoints, firstSegment, lastSegment, isClockWise) {\n\t\tlet s1, s2;\n\t\tif (isClockWise) {\n\t\t\tcutPoints.reverse();\n\t\t\ts1 = lastSegment;\n\t\t\ts2 = firstSegment;\n\t\t} else {\n\t\t\ts1 = firstSegment;\n\t\t\ts2 = lastSegment;\n\t\t}\n\t\tconst i1 = this.segments.indexOf(s1);\n\t\tconst i2 = this.segments.indexOf(s2);\n\t\tconst points = [s1.a];\n\t\tpoints.push.apply(points, cutPoints);\n\t\tconst from = i2 + 1;\n\t\tconst to = i1;\n\t\tconst t = this.segments.length;\n\t\tfor (let j = from; j < from + t; j++) {\n\t\t\tconst i = j % t;\n\t\t\tpoints.push(this.segments[i].a);\n\t\t\tif (i === to) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn points;\n\t}\n\n\tgetBackwardPoints(cutPoints, firstSegment, lastSegment, isClockWise) {\n\t\tlet s1, s2;\n\t\tif (isClockWise) {\n\t\t\ts1 = lastSegment;\n\t\t\ts2 = firstSegment;\n\t\t} else {\n\t\t\tcutPoints.reverse();\n\t\t\ts1 = firstSegment;\n\t\t\ts2 = lastSegment;\n\t\t}\n\t\tconst i1 = this.segments.indexOf(s1);\n\t\tconst i2 = this.segments.indexOf(s2);\n\t\tconst points = cutPoints.slice();\n\t\tif (i1 !== i2) {\n\t\t\tconst from = i1;\n\t\t\tconst to = i2;\n\t\t\tconst t = this.segments.length;\n\t\t\tfor (let j = from; j < from + t; j++) {\n\t\t\t\tconst i = j % t;\n\t\t\t\tif (i === to) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpoints.push(this.segments[i].b);\n\t\t\t}\n\t\t}\n\t\tpoints.push(points[0]);\n\t\treturn points;\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tconst packaging = State.resources.get(State.assets.packaging);\n\t\tctx.drawImage(packaging, 0, 0, packaging.naturalWidth, packaging.naturalHeight, this.rect.x, this.rect.y, this.rect.width, this.rect.height);\n\t\tctx.lineWidth = \"3\";\n\t\tctx.strokeStyle = \"black\";\n\t\tif (!State.ended) {\n\t\t\tctx.beginPath();\n\t\t\tconst t = this.segments.length;\n\t\t\tfor (let i = 0; i < t; i++) {\n\t\t\t\tconst s = this.segments[i];\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\tif (i === t - 1) {\n\t\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t\t}\n\t\t\t\t*/\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.save();\n\t\t\tctx.clip();\n\t\t\tconst designer = State.resources.get(State.assets.designer);\n\t\t\tctx.drawImage(designer, 0, 0, designer.naturalWidth, designer.naturalHeight, this.rect.x, this.rect.y, this.rect.width, this.rect.height);\n\t\t\tctx.restore();\n\t\t\tctx.stroke();\n\t\t}\n\t\tctx.strokeRect(this.rect.x, this.rect.y, this.rect.width, this.rect.height);\n\t\t// ctx.fill();\n\t}\n\n\tx(x) {\n\t\treturn this.rect.left + x * this.rect.width;\n\t}\n\n\ty(y) {\n\t\treturn this.rect.top + y * this.rect.height;\n\t}\n\n\t/*\n\tremove_b(polygon, firstSegment, lastSegment) {\n\t\tif (polygon.segments.length) {\n\t\t\tconst cutPoints = polygon.getPoints(true);\n\t\t\tlet checkPoints = cutPoints.slice();\n\t\t\tif (checkPoints.length === 2) {\n\t\t\t\tconst last = checkPoints[checkPoints.length - 1];\n\t\t\t\tif (lastSegment.a.distanceTo(last) < lastSegment.b.distanceTo(last)) {\n\t\t\t\t\tcheckPoints.push(lastSegment.a);\n\t\t\t\t} else {\n\t\t\t\t\tcheckPoints.push(lastSegment.b);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst isClockWise = polygon.IsClockwise(checkPoints);\n\t\t\tlet s1, s2;\n\t\t\tif (isClockWise) {\n\t\t\t\tcutPoints.reverse();\n\t\t\t\ts1 = lastSegment;\n\t\t\t\ts2 = firstSegment;\n\t\t\t} else {\n\t\t\t\ts1 = firstSegment;\n\t\t\t\ts2 = lastSegment;\n\t\t\t}\n\t\t\tconst i1 = this.segments.indexOf(s1);\n\t\t\tconst i2 = this.segments.indexOf(s2);\n\t\t\t// console.log(s1, s2);\n\t\t\t// console.log('close!', i1, i2);\n\t\t\t// console.log('cutPoints.length', cutPoints.length, polygon.segments.length);\n\t\t\tconst points = [s1.a];\n\t\t\tpoints.push.apply(points, cutPoints);\n\t\t\tconst from = i2 + 1;\n\t\t\tconst to = i1; // i1 === i2 ? i1 + 1 : i1;\n\t\t\tconst t = this.segments.length;\n\t\t\tconsole.log(from, to, i1, i2, t, isClockWise);\n\t\t\tfor (let j = from; j < from + t; j++) {\n\t\t\t\tconst i = j % t;\n\t\t\t\tpoints.push(this.segments[i].a);\n\t\t\t\tif (i === to) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.rebuild(points);\n\t\t}\n\t}\n\n\tremove_c(polygon, firstSegment, lastSegment) {\n\t\tif (polygon.segments.length) {\n\t\t\t// console.log(firstSegment, lastSegment);\n\t\t\tconst i1 = this.segments.indexOf(firstSegment);\n\t\t\tconst i2 = this.segments.indexOf(lastSegment);\n\t\t\tif (i1 !== -1 && i2 !== -1) {\n\t\t\t\t// console.log('close!', i1, i2);\n\t\t\t\tconst cutPoints = polygon.getPoints(true);\n\t\t\t\t// console.log('cutPoints.length', cutPoints.length, polygon.segments.length);\n\t\t\t\tconst min = Math.min(i1, i2);\n\t\t\t\tconst max = Math.max(i1, i2);\n\t\t\t\tconst points = [];\n\t\t\t\tfor (let i = 0; i <= min; i++) {\n\t\t\t\t\tconst s = this.segments[i];\n\t\t\t\t\tpoints.push(s.a);\n\t\t\t\t}\n\t\t\t\tconst first = cutPoints[0];\n\t\t\t\tconst last = cutPoints[cutPoints.length - 1];\n\t\t\t\tif (last.distanceTo(points[points.length - 1]) < first.distanceTo(points[points.length - 1])) {\n\t\t\t\t\tcutPoints.reverse();\n\t\t\t\t}\n\t\t\t\tpoints.push.apply(points, cutPoints);\n\t\t\t\tfor (let i = max + 1; i < this.segments.length; i++) {\n\t\t\t\t\tconst s = this.segments[i];\n\t\t\t\t\tpoints.push(s.a);\n\t\t\t\t}\n\t\t\t\tpoints.push(points[0]);\n\t\t\t\tthis.rebuild(points);\n\t\t\t}\n\t\t}\n\t}\n\t*/\n}\n","import Segment from './geometry/segment';\nimport Vector2 from './geometry/vector2';\nimport { State } from './state';\n\nexport default class Player {\n\n\tget nx() {\n\t\treturn this.position.x + this.direction.x * this.speed;\n\t}\n\n\tget ny() {\n\t\treturn this.position.y + this.direction.y * this.speed;\n\t}\n\n\tconstructor() {\n\t\tconst ground = State.ground;\n\t\tthis.position = new Vector2(ground.x(0.5), ground.y(1));\n\t\tthis.direction = new Vector2(0, 0);\n\t\tthis.speed = 5;\n\t\tthis.segment = new Segment();\n\t\tthis.active = false;\n\t}\n\n\tupdate() {\n\t\tthis.checkDirection();\n\t\tthis.move();\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\t// const ground = State.ground;\n\t\tconst canvas = State.canvas;\n\t\tconst diamond = State.resources.get(State.assets.diamond);\n\t\t/*\n\t\tconst ctx = canvas.ctx;\n\t\tctx.save();\n\t\tctx.translate(this.position.x, this.position.y);\n\t\tif (this.getOrientation() === 1) {\n\t\t\tctx.rotate(Math.PI / 2);\n\t\t}\n\t\tctx.drawImage(diamond, -diamond.naturalWidth / 2 + 100, -diamond.naturalHeight / 2);\n\t\tctx.restore();\n\t\t*/\n\t\tcanvas.drawImage(diamond, this.position.x, this.position.y, 1, this.getOrientation() === 0 ? Math.PI / 2 : 0);\n\t\t/*\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.arc(this.position.x, this.position.y, 5, 0, 2 * Math.PI, true);\n\t\tctx.stroke();\n\t\tctx.fillStyle = \"green\";\n\t\tctx.fill();\n\t\t*/\n\t}\n\n\tgetOrientation() {\n\t\tlet o = 0;\n\t\tif (this.currentSegment && (Math.abs(this.currentSegment.a.x - this.currentSegment.b.x) < 1)) {\n\t\t\to = 1;\n\t\t}\n\t\treturn o;\n\t}\n\n\tcheckDirection() {\n\t\tthis.active = State.keys.shift || State.keys.space;\n\t\tconst direction = this.direction;\n\t\tif (State.keys.left) {\n\t\t\tdirection.x = -1;\n\t\t\tdirection.y = 0;\n\t\t} else if (State.keys.right) {\n\t\t\tdirection.x = 1;\n\t\t\tdirection.y = 0;\n\t\t} else if (State.keys.up) {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = -1;\n\t\t} else if (State.keys.down) {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = 1;\n\t\t} else {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = 0;\n\t\t}\n\t}\n\n\tmove() {\n\t\tconst ground = State.ground;\n\t\tconst cut = State.cut;\n\t\tlet nx = this.nx;\n\t\tlet ny = this.ny;\n\t\tconst segment = this.segment;\n\t\tsegment.a.set(this.position.x, this.position.y);\n\t\tsegment.b.set(nx, ny);\n\t\tlet hitted;\n\t\tif (this.active && (this.direction.x || this.direction.y)) {\n\t\t\tif (hitted = ground.hit(this, 3)) {\n\t\t\t\tif (hitted instanceof Segment && cut.segments.length) {\n\t\t\t\t\t// console.log('close');\n\t\t\t\t\tconst i = hitted.getIntersection(this.segment);\n\t\t\t\t\tif (i && (i.intersectA || i.intersectB)) {\n\t\t\t\t\t\tthis.position.x = i.x;\n\t\t\t\t\t\tthis.position.y = i.y;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = cut.segments[cut.segments.length - 1];\n\t\t\t\t\tsegment.b.x = this.position.x;\n\t\t\t\t\tsegment.b.y = this.position.y;\n\t\t\t\t\tthis.lastSegment = hitted;\n\t\t\t\t\tthis.currentSegment = hitted;\n\t\t\t\t\tthis.direction.x = 0;\n\t\t\t\t\tthis.direction.y = 0;\n\t\t\t\t\t// console.log('cut.segments.length', cut.segments.length);\n\t\t\t\t\tground.remove(cut, this.firstSegment, this.lastSegment);\n\t\t\t\t\tState.onPlayerCut();\n\t\t\t\t\tcut.segments = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.firstSegment = hitted;\n\t\t\t\t\tthis.currentSegment = hitted;\n\t\t\t\t}\n\t\t\t} else if (cut.hitSegments(this, 3)) {\n\t\t\t\tcut.reset(this);\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t\tState.onPlayerReset();\n\t\t\t} else if (!ground.willBeInside(this)) {\n\t\t\t\t// console.log('outside');\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t} else {\n\t\t\t\t// console.log('segment');\n\t\t\t\tcut.move(this);\n\t\t\t\tthis.currentSegment = cut.segments[cut.segments.length - 1];\n\t\t\t}\n\t\t} else {\n\t\t\thitted = ground.hit(this, 3);\n\t\t\tif (hitted) {\n\t\t\t\tthis.firstSegment = hitted;\n\t\t\t\tthis.currentSegment = hitted;\n\t\t\t} else {\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t}\n\t\t}\n\t\tthis.position.x = this.nx;\n\t\tthis.position.y = this.ny;\n\t}\n\n}\n","const cache = {};\nconst callbacks = [];\n\nexport default class Resources {\n\n\tstatic loadAssets(assets) {\n\t\tthis.load(Object.keys(assets).map(k => assets[k]));\n\t}\n\n\tstatic load(urlOrArr) {\n\t\tif (urlOrArr instanceof Array) {\n\t\t\turlOrArr.forEach((url) => {\n\t\t\t\tResources.loadUrl(url);\n\t\t\t});\n\t\t} else {\n\t\t\tResources.loadUrl(urlOrArr);\n\t\t}\n\t}\n\n\tstatic loadUrl(url) {\n\t\tif (cache[url]) {\n\t\t\treturn cache[url];\n\t\t} else {\n\t\t\tvar image = new Image();\n\t\t\timage.onload = () => {\n\t\t\t\tcache[url] = image;\n\t\t\t\tif (Resources.isReady()) {\n\t\t\t\t\tcallbacks.forEach((callback) => {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tcache[url] = false;\n\t\t\timage.src = url;\n\t\t}\n\t}\n\n\tstatic get(url) {\n\t\treturn cache[url];\n\t}\n\n\tstatic isReady() {\n\t\tvar ready = true;\n\t\tfor (var k in cache) {\n\t\t\tif (cache.hasOwnProperty(k) && !cache[k]) {\n\t\t\t\tready = false;\n\t\t\t}\n\t\t}\n\t\treturn ready;\n\t}\n\n\tstatic onReady(callback) {\n\t\tcallbacks.push(callback);\n\t}\n}\n","import Canvas from './canvas';\nimport Cut from './cut';\nimport Enemy from './enemy';\nimport Ground from './ground';\nimport Player from './player';\nimport Resources from './resources';\nimport { State } from './state';\n\nexport default class Game {\n\n\tconstructor() {\n\t\tconst canvas = this.canvas = State.canvas = new Canvas(750, 750);\n\t\tconst ground = this.ground = State.ground = new Ground();\n\t\tconst cut = this.cut = State.cut = new Cut();\n\t\tconst enemies = State.enemies = new Array(State.minEnemies).fill(0).map(x => new Enemy());\n\t\tconst player = State.player = new Player();\n\t\tconst assets = State.assets = {\n\t\t\tdesigner: './img/game/designer.jpg',\n\t\t\tpackaging: './img/game/packaging.jpg',\n\t\t\tmouth: './img/game/mouth.png',\n\t\t\tdiamond: './img/game/diamond.png',\n\t\t};\n\t\tconst resources = State.resources = Resources;\n\t\tResources.onReady(() => {\n\t\t\tthis.init();\n\t\t\tthis.start();\n\t\t});\n\t\tResources.loadAssets(assets);\n\t}\n\n\tinit() {\n\t\tthis.loop = this.loop.bind(this);\n\t\tthis.onKeydown = this.onKeydown.bind(this);\n\t\tthis.onKeyup = this.onKeyup.bind(this);\n\t\tthis.restart = this.restart.bind(this);\n\t\tState.addEnemy = this.addEnemy.bind(this);\n\t\tState.removeEnemy = this.removeEnemy.bind(this);\n\t\tState.addScore = this.addScore.bind(this);\n\t\tState.addEnemyScore = this.addEnemyScore.bind(this);\n\t\tState.onPlayerCut = this.onPlayerCut.bind(this);\n\t\tState.onPlayerReset = this.onPlayerReset.bind(this);\n\t\tdocument.addEventListener(\"keydown\", this.onKeydown);\n\t\tdocument.addEventListener(\"keyup\", this.onKeyup);\n\t\tconst restart = document.querySelector('.btn--restart');\n\t\trestart.addEventListener(\"click\", this.restart);\n\t}\n\n\tstart() {\n\t\tState.area = 0;\n\t\tState.addEnemy();\n\t\tthis.loop();\n\t}\n\n\trestart() {\n\t\tconst container = document.querySelector('.game-container');\n\t\tcontainer.classList.remove('game-container--ended');\n\t\tState.ground = new Ground();\n\t\tState.cut = new Cut();\n\t\tState.enemies = new Array(State.minEnemies).fill(0).map(x => new Enemy());\n\t\tState.player = new Player();\n\t\tState.area = 0;\n\t\tState.percent = 0;\n\t\tState.score = 0;\n\t\tState.paused = false;\n\t\tState.ended = false;\n\t\tState.won = false;\n\t\tState.lost = false;\n\t\tState.addEnemy();\n\t\tthis.setPercent();\n\t}\n\n\tonPlayerCut() {\n\t\tconst ground = State.ground;\n\t\tconst cut = State.cut;\n\t\t// update score and enemies\n\t\tconst deads = State.enemies.filter(enemy => !ground.isInside(enemy));\n\t\tdeads.forEach(enemy => {\n\t\t\tState.removeEnemy(enemy);\n\t\t\tState.addEnemyScore(enemy);\n\t\t});\n\t\tif (State.enemies.length === 0) {\n\t\t\tState.enemies = new Array(State.minEnemies).fill(0).map(x => new Enemy());\n\t\t}\n\t\tState.area = ground.getArea();\n\t\tState.percent = Math.round((State.totalArea - State.area) / State.totalArea * 100);\n\t\tif (State.percent >= 75) {\n\t\t\tState.percent = 100;\n\t\t\tState.ended = true;\n\t\t\tState.won = true;\n\t\t\tconst container = document.querySelector('.game-container');\n\t\t\tcontainer.classList.add('game-container--ended');\n\t\t}\n\t\tthis.setPercent();\n\t\tconst area = cut.getArea();\n\t\tconst score = Math.round(Math.sqrt(area));\n\t\tState.addScore(score);\n\t}\n\n\tsetPercent() {\n\t\tconst percent = `${State.percent}%`;\n\t\t// console.log('State', State.area, State.percent);\n\t\tconst bar = document.querySelector('.progress__bar');\n\t\tgsap.set(bar, { width: percent });\n\t\tconst progress = document.querySelector('.group--progress .percent');\n\t\tprogress.innerText = percent;\n\t}\n\n\tonPlayerReset() {\n\t\tState.keys.space = State.keys.shift = false;\n\t}\n\n\taddEnemy() {\n\t\tif (this.to) {\n\t\t\tclearTimeout(this.to);\n\t\t}\n\t\tconst add = () => {\n\t\t\tconsole.log('addEnemy');\n\t\t\tif (!State.ended && !State.paused) {\n\t\t\t\tif (State.enemies.length < State.maxEnemies) {\n\t\t\t\t\tState.enemies.push(new Enemy());\n\t\t\t\t}\n\t\t\t\tthis.addEnemy();\n\t\t\t}\n\t\t};\n\t\tthis.to = setTimeout(add, 10000);\n\t}\n\n\tremoveEnemy(enemy) {\n\t\tconsole.log('removeEnemy', enemy);\n\t\tconst index = State.enemies.indexOf(enemy);\n\t\tif (index !== -1) {\n\t\t\tState.enemies.splice(index, 1);\n\t\t}\n\t}\n\n\taddEnemyScore(enemy) {\n\t\tState.score += 500;\n\t\tconsole.log('addEnemyScore', enemy, State.score);\n\t}\n\n\taddScore(score) {\n\t\tState.score += score;\n\t\t// console.log('addScore', score);\n\t}\n\n\tloop() {\n\t\tif (!State.paused) {\n\t\t\tif (!State.ended) {\n\t\t\t\tState.canvas.update();\n\t\t\t\tState.ground.update();\n\t\t\t\tState.cut.update();\n\t\t\t\tState.enemies.forEach(x => x.update());\n\t\t\t\tState.player.update();\n\t\t\t} else {\n\t\t\t\tState.canvas.update();\n\t\t\t\tState.ground.draw();\n\t\t\t\tif (State.won) {\n\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t}\n\t\t\trequestAnimationFrame(this.loop);\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tif (State.paused) {\n\t\t\tState.paused = false;\n\t\t\tthis.loop();\n\t\t\tthis.addEnemy();\n\t\t} else {\n\t\t\tState.paused = true;\n\t\t}\n\t}\n\n\thandleKeyCode(event) {\n\t\tlet keyCode = 'unknown';\n\t\tswitch (event.keyCode) {\n\t\t\tcase 32: // space\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeyCode = 'space';\n\t\t\t\tbreak;\n\t\t\tcase 37: // left\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeyCode = 'left';\n\t\t\t\tbreak;\n\t\t\tcase 38: // up\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeyCode = 'up';\n\t\t\t\tbreak;\n\t\t\tcase 39: // right\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeyCode = 'right';\n\t\t\t\tbreak;\n\t\t\tcase 40: // down\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeyCode = 'down';\n\t\t\t\tbreak;\n\t\t}\n\t\treturn keyCode;\n\t}\n\n\tonKeydown(event) {\n\t\tconst keys = State.keys;\n\t\tevent = event || window.event; // to deal with IE\n\t\tkeys.shift = event.shiftKey;\n\t\tswitch (event.keyCode) {\n\t\t\tcase 112: // f1\n\t\t\tcase 80: // p\n\t\t\t\tthis.toggle();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tkeys[this.handleKeyCode(event)] = event.type == 'keydown';\n\t\t}\n\t}\n\n\tonKeyup(event) {\n\t\tconst keys = State.keys;\n\t\tevent = event || window.event; // to deal with IE\n\t\tkeys.shift = event.shiftKey;\n\t\tkeys[this.handleKeyCode(event)] = event.type == 'keydown';\n\t}\n\n}\n","import Game from \"./game/game\";\n\nconst game = new Game();"],"names":["Vector2","x","y","set","setScalar","scalar","setX","setY","setComponent","index","value","Error","getComponent","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","random","Canvas","width","height","canvas","document","querySelector","offsetWidth","offsetHeight","size","ctx","getContext","update","clearRect","drawPoint","p","beginPath","arc","lineWidth","strokeStyle","stroke","drawSegment","moveTo","lineTo","drawImage","image","scale","rotation","setTransform","rotate","naturalWidth","drawImageCenter","cx","cy","State","paused","ended","won","lost","keys","score","area","minEnemies","maxEnemies","addEnemy","removeEnemy","addScore","addEnemyScore","onPlayerCut","onPlayerReset","Segment","ax","ay","bx","by","draw","bounce","i","intersect","r","reflect","d","getIntersection","intersectA","intersectB","intersection","rayTip","n","normal","dotNormal","reflection","vector","iX","iY","rayTipX","rayTipY","rayX","rayY","denominator","numerator1","numerator2","result","hit","actor","tolerance","calcIsInsideThickLineSegment","segment","px","py","L2","Polygon","points","segments","forEach","push","getArea","getPoints","getAreaFromPoints","l","addX","addY","subX","subY","rebuild","hitSegments","reduce","isInside","isPointInside","position","willBeInside","fillStyle","t","fill","closed","IsClockwise","sum","inside","minX","maxX","minY","maxY","q","j","Cut","direction","start","end","move","nx","ny","close","reset","Enemy","speed","getRandomPosition","getRandomDirection","getCenterPosition","ground","checkCollision","mouth","resources","get","assets","naturalHeight","cut","player","Rect","top","left","right","bottom","setCenter","contains","rect","intersectRect","r1","r2","fromNode","node","rect_","rects","getClientRects","boundingRect","getBoundingClientRect","setSize","h","intersection_","pow","scroll","Ground","init","totalArea","remove","polygon","firstSegment","lastSegment","cutPoints","isClockWise","slice","forwardPoints","getForwardPoints","backwardPoints","getBackwardPoints","a1","a2","s1","s2","reverse","i1","indexOf","i2","apply","from","to","packaging","closePath","save","clip","designer","restore","strokeRect","Player","active","checkDirection","diamond","getOrientation","o","currentSegment","shift","space","up","down","hitted","cache","callbacks","Resources","loadAssets","load","Object","map","k","urlOrArr","Array","url","loadUrl","Image","onload","isReady","callback","src","ready","hasOwnProperty","onReady","Game","enemies","loop","bind","onKeydown","onKeyup","restart","addEventListener","container","classList","percent","setPercent","deads","filter","enemy","bar","gsap","progress","innerText","clearTimeout","log","setTimeout","splice","requestAnimationFrame","toggle","handleKeyCode","event","keyCode","preventDefault","window","shiftKey","type","game"],"mappings":"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"}