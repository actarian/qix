{"version":3,"file":"src/js/main.js","sources":["../../src/js/game/vector2.js","../../src/js/game/canvas.js","../../node_modules/@babel/runtime/helpers/inheritsLoose.js","../../node_modules/polybooljs/lib/build-log.js","../../node_modules/polybooljs/lib/epsilon.js","../../node_modules/polybooljs/lib/linked-list.js","../../node_modules/polybooljs/lib/intersecter.js","../../node_modules/polybooljs/lib/segment-chainer.js","../../node_modules/polybooljs/lib/segment-selector.js","../../node_modules/polybooljs/lib/geojson.js","../../node_modules/polybooljs/index.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../src/js/game/segment.js","../../src/js/game/state.js","../../src/js/game/polygon.js","../../src/js/game/cut.js","../../src/js/game/enemy.js","../../src/js/game/rect.js","../../src/js/game/ground.js","../../src/js/game/player.js","../../src/js/game/game.js","../../src/js/main.js"],"sourcesContent":["export default class Vector2 {\n\n\tconstructor(x = 0, y = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tset(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetScalar(scalar) {\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\treturn this;\n\t}\n\n\tsetX(x) {\n\t\tthis.x = x;\n\t\treturn this;\n\t}\n\n\tsetY(y) {\n\t\tthis.y = y;\n\t\treturn this;\n\t}\n\n\tsetComponent(index, value) {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetComponent(index) {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn this.x;\n\t\t\tcase 1:\n\t\t\t\treturn this.y;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t}\n\n\t}\n\n\tclone() {\n\t\treturn new this.constructor(this.x, this.y);\n\t}\n\n\tcopy(v) {\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\treturn this;\n\t}\n\n\tadd(v, w) {\n\t\tif (w !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\treturn this.addVectors(v, w);\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\treturn this;\n\t}\n\n\taddScalar(s) {\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\treturn this;\n\t}\n\n\taddVectors(a, b) {\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\treturn this;\n\t}\n\n\taddScaledVector(v, s) {\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\treturn this;\n\t}\n\n\tsub(v, w) {\n\t\tif (w !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\treturn this.subVectors(v, w);\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\treturn this;\n\t}\n\n\tsubScalar(s) {\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\treturn this;\n\t}\n\n\tsubVectors(a, b) {\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\treturn this;\n\t}\n\n\tmultiply(v) {\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\treturn this;\n\t}\n\n\tmultiplyScalar(scalar) {\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\treturn this;\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\treturn this;\n\t}\n\n\tdivideScalar(scalar) {\n\t\treturn this.multiplyScalar(1 / scalar);\n\t}\n\n\tapplyMatrix3(m) {\n\t\tvar x = this.x,\n\t\t\ty = this.y;\n\t\tvar e = m.elements;\n\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\treturn this;\n\t}\n\n\tmin(v) {\n\t\tthis.x = Math.min(this.x, v.x);\n\t\tthis.y = Math.min(this.y, v.y);\n\t\treturn this;\n\t}\n\n\tmax(v) {\n\t\tthis.x = Math.max(this.x, v.x);\n\t\tthis.y = Math.max(this.y, v.y);\n\t\treturn this;\n\t}\n\n\tclamp(min, max) {\n\t\t// assumes min < max, componentwise\n\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\treturn this;\n\t}\n\n\tclampScalar(minVal, maxVal) {\n\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\treturn this;\n\t}\n\n\tclampLength(min, max) {\n\t\tvar length = this.length();\n\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t}\n\n\tfloor() {\n\t\tthis.x = Math.floor(this.x);\n\t\tthis.y = Math.floor(this.y);\n\t\treturn this;\n\t}\n\n\tceil() {\n\t\tthis.x = Math.ceil(this.x);\n\t\tthis.y = Math.ceil(this.y);\n\t\treturn this;\n\t}\n\n\tround() {\n\t\tthis.x = Math.round(this.x);\n\t\tthis.y = Math.round(this.y);\n\t\treturn this;\n\t}\n\n\troundToZero() {\n\t\tthis.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\n\t\tthis.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\n\t\treturn this;\n\t}\n\n\tnegate() {\n\t\tthis.x = -this.x;\n\t\tthis.y = -this.y;\n\t\treturn this;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y;\n\t}\n\n\tcross(v) {\n\t\treturn this.x * v.y - this.y * v.x;\n\t}\n\n\tlengthSq() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tmanhattanLength() {\n\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t}\n\n\tnormalize() {\n\t\treturn this.divideScalar(this.length() || 1);\n\t}\n\n\tangle() {\n\t\t// computes the angle in radians with respect to the positive x-axis\n\t\tvar angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\treturn angle;\n\t}\n\n\tdistanceTo(v) {\n\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t}\n\n\tdistanceToSquared(v) {\n\t\tvar dx = this.x - v.x,\n\t\t\tdy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\t}\n\n\tmanhattanDistanceTo(v) {\n\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t}\n\n\tsetLength(length) {\n\t\treturn this.normalize().multiplyScalar(length);\n\t}\n\n\tlerp(v, alpha) {\n\t\tthis.x += (v.x - this.x) * alpha;\n\t\tthis.y += (v.y - this.y) * alpha;\n\t\treturn this;\n\t}\n\n\tlerpVectors(v1, v2, alpha) {\n\t\treturn this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n\t}\n\n\tequals(v) {\n\t\treturn ((v.x === this.x) && (v.y === this.y));\n\t}\n\n\tfromArray(array, offset) {\n\t\tif (offset === undefined) offset = 0;\n\t\tthis.x = array[offset];\n\t\tthis.y = array[offset + 1];\n\t\treturn this;\n\t}\n\n\ttoArray(array, offset) {\n\t\tif (array === undefined) array = [];\n\t\tif (offset === undefined) offset = 0;\n\t\tarray[offset] = this.x;\n\t\tarray[offset + 1] = this.y;\n\t\treturn array;\n\t}\n\n\tfromBufferAttribute(attribute, index, offset) {\n\t\tif (offset !== undefined) {\n\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t}\n\n\t\tthis.x = attribute.getX(index);\n\t\tthis.y = attribute.getY(index);\n\t\treturn this;\n\t}\n\n\trotateAround(center, angle) {\n\t\tvar c = Math.cos(angle),\n\t\t\ts = Math.sin(angle);\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\t\treturn this;\n\t}\n\n\trandom() {\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\treturn this;\n\t}\n\n}\n","import Vector2 from './vector2';\n\nexport default class Canvas {\n\n\tconstructor() {\n\t\tconst canvas = this.canvas = document.querySelector('.game .canvas');\n\t\tconst size = this.size = new Vector2(canvas.offsetWidth, canvas.offsetHeight);\n\t\tcanvas.width = size.x;\n\t\tcanvas.height = size.y;\n\t\tthis.ctx = canvas.getContext('2d');\n\t}\n\n\tupdate() {\n\t\tconst size = this.size;\n\t\tconst ctx = this.ctx;\n\t\tctx.clearRect(0, 0, size.x, size.y);\n\t}\n\n\tdrawPoint(p) {\n\t\tconst ctx = this.ctx;\n\t\tctx.beginPath();\n\t\tctx.arc(p.x, p.y, 4, 0, 2 * Math.PI);\n\t\tctx.lineWidth = 2;\n\t\tctx.strokeStyle = \"red\";\n\t\tctx.stroke();\n\t}\n\n\tdrawSegment(s) {\n\t\tconst ctx = this.ctx;\n\t\tctx.beginPath();\n\t\tctx.moveTo(s.a.x, s.a.y);\n\t\tctx.lineTo(s.b.x, s.b.y);\n\t\tctx.lineWidth = 2;\n\t\tctx.strokeStyle = \"white\";\n\t\tctx.stroke();\n\t}\n\n\t/*\n\tresize() {\n\t\tconst canvas = this.canvas;\n\t\tconst rect = this.rect;\n\t\trect.width = canvas.offsetWidth;\n\t\trect.height = canvas.offsetHeight;\n\t\tcanvas.width = rect.width;\n\t\tcanvas.height = rect.height;\n\t}\n\t*/\n\n}\n","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// used strictly for logging the processing of the algorithm... only useful if you intend on\n// looking under the covers (for pretty UI's or debugging)\n//\n\nfunction BuildLog(){\n\tvar my;\n\tvar nextSegmentId = 0;\n\tvar curVert = false;\n\n\tfunction push(type, data){\n\t\tmy.list.push({\n\t\t\ttype: type,\n\t\t\tdata: data ? JSON.parse(JSON.stringify(data)) : void 0\n\t\t});\n\t\treturn my;\n\t}\n\n\tmy = {\n\t\tlist: [],\n\t\tsegmentId: function(){\n\t\t\treturn nextSegmentId++;\n\t\t},\n\t\tcheckIntersection: function(seg1, seg2){\n\t\t\treturn push('check', { seg1: seg1, seg2: seg2 });\n\t\t},\n\t\tsegmentChop: function(seg, end){\n\t\t\tpush('div_seg', { seg: seg, pt: end });\n\t\t\treturn push('chop', { seg: seg, pt: end });\n\t\t},\n\t\tstatusRemove: function(seg){\n\t\t\treturn push('pop_seg', { seg: seg });\n\t\t},\n\t\tsegmentUpdate: function(seg){\n\t\t\treturn push('seg_update', { seg: seg });\n\t\t},\n\t\tsegmentNew: function(seg, primary){\n\t\t\treturn push('new_seg', { seg: seg, primary: primary });\n\t\t},\n\t\tsegmentRemove: function(seg){\n\t\t\treturn push('rem_seg', { seg: seg });\n\t\t},\n\t\ttempStatus: function(seg, above, below){\n\t\t\treturn push('temp_status', { seg: seg, above: above, below: below });\n\t\t},\n\t\trewind: function(seg){\n\t\t\treturn push('rewind', { seg: seg });\n\t\t},\n\t\tstatus: function(seg, above, below){\n\t\t\treturn push('status', { seg: seg, above: above, below: below });\n\t\t},\n\t\tvert: function(x){\n\t\t\tif (x === curVert)\n\t\t\t\treturn my;\n\t\t\tcurVert = x;\n\t\t\treturn push('vert', { x: x });\n\t\t},\n\t\tlog: function(data){\n\t\t\tif (typeof data !== 'string')\n\t\t\t\tdata = JSON.stringify(data, false, '  ');\n\t\t\treturn push('log', { txt: data });\n\t\t},\n\t\treset: function(){\n\t\t\treturn push('reset');\n\t\t},\n\t\tselected: function(segs){\n\t\t\treturn push('selected', { segs: segs });\n\t\t},\n\t\tchainStart: function(seg){\n\t\t\treturn push('chain_start', { seg: seg });\n\t\t},\n\t\tchainRemoveHead: function(index, pt){\n\t\t\treturn push('chain_rem_head', { index: index, pt: pt });\n\t\t},\n\t\tchainRemoveTail: function(index, pt){\n\t\t\treturn push('chain_rem_tail', { index: index, pt: pt });\n\t\t},\n\t\tchainNew: function(pt1, pt2){\n\t\t\treturn push('chain_new', { pt1: pt1, pt2: pt2 });\n\t\t},\n\t\tchainMatch: function(index){\n\t\t\treturn push('chain_match', { index: index });\n\t\t},\n\t\tchainClose: function(index){\n\t\t\treturn push('chain_close', { index: index });\n\t\t},\n\t\tchainAddHead: function(index, pt){\n\t\t\treturn push('chain_add_head', { index: index, pt: pt });\n\t\t},\n\t\tchainAddTail: function(index, pt){\n\t\t\treturn push('chain_add_tail', { index: index, pt: pt, });\n\t\t},\n\t\tchainConnect: function(index1, index2){\n\t\t\treturn push('chain_con', { index1: index1, index2: index2 });\n\t\t},\n\t\tchainReverse: function(index){\n\t\t\treturn push('chain_rev', { index: index });\n\t\t},\n\t\tchainJoin: function(index1, index2){\n\t\t\treturn push('chain_join', { index1: index1, index2: index2 });\n\t\t},\n\t\tdone: function(){\n\t\t\treturn push('done');\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = BuildLog;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// provides the raw computation functions that takes epsilon into account\n//\n// zero is defined to be between (-epsilon, epsilon) exclusive\n//\n\nfunction Epsilon(eps){\n\tif (typeof eps !== 'number')\n\t\teps = 0.0000000001; // sane default? sure why not\n\tvar my = {\n\t\tepsilon: function(v){\n\t\t\tif (typeof v === 'number')\n\t\t\t\teps = v;\n\t\t\treturn eps;\n\t\t},\n\t\tpointAboveOrOnLine: function(pt, left, right){\n\t\t\tvar Ax = left[0];\n\t\t\tvar Ay = left[1];\n\t\t\tvar Bx = right[0];\n\t\t\tvar By = right[1];\n\t\t\tvar Cx = pt[0];\n\t\t\tvar Cy = pt[1];\n\t\t\treturn (Bx - Ax) * (Cy - Ay) - (By - Ay) * (Cx - Ax) >= -eps;\n\t\t},\n\t\tpointBetween: function(p, left, right){\n\t\t\t// p must be collinear with left->right\n\t\t\t// returns false if p == left, p == right, or left == right\n\t\t\tvar d_py_ly = p[1] - left[1];\n\t\t\tvar d_rx_lx = right[0] - left[0];\n\t\t\tvar d_px_lx = p[0] - left[0];\n\t\t\tvar d_ry_ly = right[1] - left[1];\n\n\t\t\tvar dot = d_px_lx * d_rx_lx + d_py_ly * d_ry_ly;\n\t\t\t// if `dot` is 0, then `p` == `left` or `left` == `right` (reject)\n\t\t\t// if `dot` is less than 0, then `p` is to the left of `left` (reject)\n\t\t\tif (dot < eps)\n\t\t\t\treturn false;\n\n\t\t\tvar sqlen = d_rx_lx * d_rx_lx + d_ry_ly * d_ry_ly;\n\t\t\t// if `dot` > `sqlen`, then `p` is to the right of `right` (reject)\n\t\t\t// therefore, if `dot - sqlen` is greater than 0, then `p` is to the right of `right` (reject)\n\t\t\tif (dot - sqlen > -eps)\n\t\t\t\treturn false;\n\n\t\t\treturn true;\n\t\t},\n\t\tpointsSameX: function(p1, p2){\n\t\t\treturn Math.abs(p1[0] - p2[0]) < eps;\n\t\t},\n\t\tpointsSameY: function(p1, p2){\n\t\t\treturn Math.abs(p1[1] - p2[1]) < eps;\n\t\t},\n\t\tpointsSame: function(p1, p2){\n\t\t\treturn my.pointsSameX(p1, p2) && my.pointsSameY(p1, p2);\n\t\t},\n\t\tpointsCompare: function(p1, p2){\n\t\t\t// returns -1 if p1 is smaller, 1 if p2 is smaller, 0 if equal\n\t\t\tif (my.pointsSameX(p1, p2))\n\t\t\t\treturn my.pointsSameY(p1, p2) ? 0 : (p1[1] < p2[1] ? -1 : 1);\n\t\t\treturn p1[0] < p2[0] ? -1 : 1;\n\t\t},\n\t\tpointsCollinear: function(pt1, pt2, pt3){\n\t\t\t// does pt1->pt2->pt3 make a straight line?\n\t\t\t// essentially this is just checking to see if the slope(pt1->pt2) === slope(pt2->pt3)\n\t\t\t// if slopes are equal, then they must be collinear, because they share pt2\n\t\t\tvar dx1 = pt1[0] - pt2[0];\n\t\t\tvar dy1 = pt1[1] - pt2[1];\n\t\t\tvar dx2 = pt2[0] - pt3[0];\n\t\t\tvar dy2 = pt2[1] - pt3[1];\n\t\t\treturn Math.abs(dx1 * dy2 - dx2 * dy1) < eps;\n\t\t},\n\t\tlinesIntersect: function(a0, a1, b0, b1){\n\t\t\t// returns false if the lines are coincident (e.g., parallel or on top of each other)\n\t\t\t//\n\t\t\t// returns an object if the lines intersect:\n\t\t\t//   {\n\t\t\t//     pt: [x, y],    where the intersection point is at\n\t\t\t//     alongA: where intersection point is along A,\n\t\t\t//     alongB: where intersection point is along B\n\t\t\t//   }\n\t\t\t//\n\t\t\t//  alongA and alongB will each be one of: -2, -1, 0, 1, 2\n\t\t\t//\n\t\t\t//  with the following meaning:\n\t\t\t//\n\t\t\t//    -2   intersection point is before segment's first point\n\t\t\t//    -1   intersection point is directly on segment's first point\n\t\t\t//     0   intersection point is between segment's first and second points (exclusive)\n\t\t\t//     1   intersection point is directly on segment's second point\n\t\t\t//     2   intersection point is after segment's second point\n\t\t\tvar adx = a1[0] - a0[0];\n\t\t\tvar ady = a1[1] - a0[1];\n\t\t\tvar bdx = b1[0] - b0[0];\n\t\t\tvar bdy = b1[1] - b0[1];\n\n\t\t\tvar axb = adx * bdy - ady * bdx;\n\t\t\tif (Math.abs(axb) < eps)\n\t\t\t\treturn false; // lines are coincident\n\n\t\t\tvar dx = a0[0] - b0[0];\n\t\t\tvar dy = a0[1] - b0[1];\n\n\t\t\tvar A = (bdx * dy - bdy * dx) / axb;\n\t\t\tvar B = (adx * dy - ady * dx) / axb;\n\n\t\t\tvar ret = {\n\t\t\t\talongA: 0,\n\t\t\t\talongB: 0,\n\t\t\t\tpt: [\n\t\t\t\t\ta0[0] + A * adx,\n\t\t\t\t\ta0[1] + A * ady\n\t\t\t\t]\n\t\t\t};\n\n\t\t\t// categorize where intersection point is along A and B\n\n\t\t\tif (A <= -eps)\n\t\t\t\tret.alongA = -2;\n\t\t\telse if (A < eps)\n\t\t\t\tret.alongA = -1;\n\t\t\telse if (A - 1 <= -eps)\n\t\t\t\tret.alongA = 0;\n\t\t\telse if (A - 1 < eps)\n\t\t\t\tret.alongA = 1;\n\t\t\telse\n\t\t\t\tret.alongA = 2;\n\n\t\t\tif (B <= -eps)\n\t\t\t\tret.alongB = -2;\n\t\t\telse if (B < eps)\n\t\t\t\tret.alongB = -1;\n\t\t\telse if (B - 1 <= -eps)\n\t\t\t\tret.alongB = 0;\n\t\t\telse if (B - 1 < eps)\n\t\t\t\tret.alongB = 1;\n\t\t\telse\n\t\t\t\tret.alongB = 2;\n\n\t\t\treturn ret;\n\t\t},\n\t\tpointInsideRegion: function(pt, region){\n\t\t\tvar x = pt[0];\n\t\t\tvar y = pt[1];\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar inside = false;\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\n\t\t\t\t// if y is between curr_y and last_y, and\n\t\t\t\t// x is to the right of the boundary created by the line\n\t\t\t\tif ((curr_y - y > eps) != (last_y - y > eps) &&\n\t\t\t\t\t(last_x - curr_x) * (y - curr_y) / (last_y - curr_y) + curr_x - x > eps)\n\t\t\t\t\tinside = !inside\n\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\treturn inside;\n\t\t}\n\t};\n\treturn my;\n}\n\nmodule.exports = Epsilon;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// simple linked list implementation that allows you to traverse down nodes and save positions\n//\n\nvar LinkedList = {\n\tcreate: function(){\n\t\tvar my = {\n\t\t\troot: { root: true, next: null },\n\t\t\texists: function(node){\n\t\t\t\tif (node === null || node === my.root)\n\t\t\t\t\treturn false;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tisEmpty: function(){\n\t\t\t\treturn my.root.next === null;\n\t\t\t},\n\t\t\tgetHead: function(){\n\t\t\t\treturn my.root.next;\n\t\t\t},\n\t\t\tinsertBefore: function(node, check){\n\t\t\t\tvar last = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here)){\n\t\t\t\t\t\tnode.prev = here.prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\there.prev.next = node;\n\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlast = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\tlast.next = node;\n\t\t\t\tnode.prev = last;\n\t\t\t\tnode.next = null;\n\t\t\t},\n\t\t\tfindTransition: function(check){\n\t\t\t\tvar prev = my.root;\n\t\t\t\tvar here = my.root.next;\n\t\t\t\twhile (here !== null){\n\t\t\t\t\tif (check(here))\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tprev = here;\n\t\t\t\t\there = here.next;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tbefore: prev === my.root ? null : prev,\n\t\t\t\t\tafter: here,\n\t\t\t\t\tinsert: function(node){\n\t\t\t\t\t\tnode.prev = prev;\n\t\t\t\t\t\tnode.next = here;\n\t\t\t\t\t\tprev.next = node;\n\t\t\t\t\t\tif (here !== null)\n\t\t\t\t\t\t\there.prev = node;\n\t\t\t\t\t\treturn node;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t\treturn my;\n\t},\n\tnode: function(data){\n\t\tdata.prev = null;\n\t\tdata.next = null;\n\t\tdata.remove = function(){\n\t\t\tdata.prev.next = data.next;\n\t\t\tif (data.next)\n\t\t\t\tdata.next.prev = data.prev;\n\t\t\tdata.prev = null;\n\t\t\tdata.next = null;\n\t\t};\n\t\treturn data;\n\t}\n};\n\nmodule.exports = LinkedList;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// this is the core work-horse\n//\n\nvar LinkedList = require('./linked-list');\n\nfunction Intersecter(selfIntersection, eps, buildLog){\n\t// selfIntersection is true/false depending on the phase of the overall algorithm\n\n\t//\n\t// segment creation\n\t//\n\n\tfunction segmentNew(start, end){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: null, // is there fill above us?\n\t\t\t\tbelow: null  // is there fill below us?\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\tfunction segmentCopy(start, end, seg){\n\t\treturn {\n\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tmyFill: {\n\t\t\t\tabove: seg.myFill.above,\n\t\t\t\tbelow: seg.myFill.below\n\t\t\t},\n\t\t\totherFill: null\n\t\t};\n\t}\n\n\t//\n\t// event logic\n\t//\n\n\tvar event_root = LinkedList.create();\n\n\tfunction eventCompare(p1_isStart, p1_1, p1_2, p2_isStart, p2_1, p2_2){\n\t\t// compare the selected points first\n\t\tvar comp = eps.pointsCompare(p1_1, p2_1);\n\t\tif (comp !== 0)\n\t\t\treturn comp;\n\t\t// the selected points are the same\n\n\t\tif (eps.pointsSame(p1_2, p2_2)) // if the non-selected points are the same too...\n\t\t\treturn 0; // then the segments are equal\n\n\t\tif (p1_isStart !== p2_isStart) // if one is a start and the other isn't...\n\t\t\treturn p1_isStart ? 1 : -1; // favor the one that isn't the start\n\n\t\t// otherwise, we'll have to calculate which one is below the other manually\n\t\treturn eps.pointAboveOrOnLine(p1_2,\n\t\t\tp2_isStart ? p2_1 : p2_2, // order matters\n\t\t\tp2_isStart ? p2_2 : p2_1\n\t\t) ? 1 : -1;\n\t}\n\n\tfunction eventAdd(ev, other_pt){\n\t\tevent_root.insertBefore(ev, function(here){\n\t\t\t// should ev be inserted before here?\n\t\t\tvar comp = eventCompare(\n\t\t\t\tev  .isStart, ev  .pt,      other_pt,\n\t\t\t\there.isStart, here.pt, here.other.pt\n\t\t\t);\n\t\t\treturn comp < 0;\n\t\t});\n\t}\n\n\tfunction eventAddSegmentStart(seg, primary){\n\t\tvar ev_start = LinkedList.node({\n\t\t\tisStart: true,\n\t\t\tpt: seg.start,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: null,\n\t\t\tstatus: null\n\t\t});\n\t\teventAdd(ev_start, seg.end);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventAddSegmentEnd(ev_start, seg, primary){\n\t\tvar ev_end = LinkedList.node({\n\t\t\tisStart: false,\n\t\t\tpt: seg.end,\n\t\t\tseg: seg,\n\t\t\tprimary: primary,\n\t\t\tother: ev_start,\n\t\t\tstatus: null\n\t\t});\n\t\tev_start.other = ev_end;\n\t\teventAdd(ev_end, ev_start.pt);\n\t}\n\n\tfunction eventAddSegment(seg, primary){\n\t\tvar ev_start = eventAddSegmentStart(seg, primary);\n\t\teventAddSegmentEnd(ev_start, seg, primary);\n\t\treturn ev_start;\n\t}\n\n\tfunction eventUpdateEnd(ev, end){\n\t\t// slides an end backwards\n\t\t//   (start)------------(end)    to:\n\t\t//   (start)---(end)\n\n\t\tif (buildLog)\n\t\t\tbuildLog.segmentChop(ev.seg, end);\n\n\t\tev.other.remove();\n\t\tev.seg.end = end;\n\t\tev.other.pt = end;\n\t\teventAdd(ev.other, ev.pt);\n\t}\n\n\tfunction eventDivide(ev, pt){\n\t\tvar ns = segmentCopy(pt, ev.seg.end, ev.seg);\n\t\teventUpdateEnd(ev, pt);\n\t\treturn eventAddSegment(ns, ev.primary);\n\t}\n\n\tfunction calculate(primaryPolyInverted, secondaryPolyInverted){\n\t\t// if selfIntersection is true then there is no secondary polygon, so that isn't used\n\n\t\t//\n\t\t// status logic\n\t\t//\n\n\t\tvar status_root = LinkedList.create();\n\n\t\tfunction statusCompare(ev1, ev2){\n\t\t\tvar a1 = ev1.seg.start;\n\t\t\tvar a2 = ev1.seg.end;\n\t\t\tvar b1 = ev2.seg.start;\n\t\t\tvar b2 = ev2.seg.end;\n\n\t\t\tif (eps.pointsCollinear(a1, b1, b2)){\n\t\t\t\tif (eps.pointsCollinear(a2, b1, b2))\n\t\t\t\t\treturn 1;//eventCompare(true, a1, a2, true, b1, b2);\n\t\t\t\treturn eps.pointAboveOrOnLine(a2, b1, b2) ? 1 : -1;\n\t\t\t}\n\t\t\treturn eps.pointAboveOrOnLine(a1, b1, b2) ? 1 : -1;\n\t\t}\n\n\t\tfunction statusFindSurrounding(ev){\n\t\t\treturn status_root.findTransition(function(here){\n\t\t\t\tvar comp = statusCompare(ev, here.ev);\n\t\t\t\treturn comp > 0;\n\t\t\t});\n\t\t}\n\n\t\tfunction checkIntersection(ev1, ev2){\n\t\t\t// returns the segment equal to ev1, or false if nothing equal\n\n\t\t\tvar seg1 = ev1.seg;\n\t\t\tvar seg2 = ev2.seg;\n\t\t\tvar a1 = seg1.start;\n\t\t\tvar a2 = seg1.end;\n\t\t\tvar b1 = seg2.start;\n\t\t\tvar b2 = seg2.end;\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.checkIntersection(seg1, seg2);\n\n\t\t\tvar i = eps.linesIntersect(a1, a2, b1, b2);\n\n\t\t\tif (i === false){\n\t\t\t\t// segments are parallel or coincident\n\n\t\t\t\t// if points aren't collinear, then the segments are parallel, so no intersections\n\t\t\t\tif (!eps.pointsCollinear(a1, a2, b1))\n\t\t\t\t\treturn false;\n\t\t\t\t// otherwise, segments are on top of each other somehow (aka coincident)\n\n\t\t\t\tif (eps.pointsSame(a1, b2) || eps.pointsSame(a2, b1))\n\t\t\t\t\treturn false; // segments touch at endpoints... no intersection\n\n\t\t\t\tvar a1_equ_b1 = eps.pointsSame(a1, b1);\n\t\t\t\tvar a2_equ_b2 = eps.pointsSame(a2, b2);\n\n\t\t\t\tif (a1_equ_b1 && a2_equ_b2)\n\t\t\t\t\treturn ev2; // segments are exactly equal\n\n\t\t\t\tvar a1_between = !a1_equ_b1 && eps.pointBetween(a1, b1, b2);\n\t\t\t\tvar a2_between = !a2_equ_b2 && eps.pointBetween(a2, b1, b2);\n\n\t\t\t\t// handy for debugging:\n\t\t\t\t// buildLog.log({\n\t\t\t\t//\ta1_equ_b1: a1_equ_b1,\n\t\t\t\t//\ta2_equ_b2: a2_equ_b2,\n\t\t\t\t//\ta1_between: a1_between,\n\t\t\t\t//\ta2_between: a2_between\n\t\t\t\t// });\n\n\t\t\t\tif (a1_equ_b1){\n\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t//  (a1)---(a2)\n\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t//  (a1)----------(a2)\n\t\t\t\t\t\t//  (b1)---(b2)\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t}\n\t\t\t\t\treturn ev2;\n\t\t\t\t}\n\t\t\t\telse if (a1_between){\n\t\t\t\t\tif (!a2_equ_b2){\n\t\t\t\t\t\t// make a2 equal to b2\n\t\t\t\t\t\tif (a2_between){\n\t\t\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t\t\t//  (b1)-----------------(b2)\n\t\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t//         (a1)----------(a2)\n\t\t\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//         (a1)---(a2)\n\t\t\t\t\t//  (b1)----------(b2)\n\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// otherwise, lines intersect at i.pt, which may or may not be between the endpoints\n\n\t\t\t\t// is A divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongA === 0){\n\t\t\t\t\tif (i.alongB === -1) // yes, at exactly b1\n\t\t\t\t\t\teventDivide(ev1, b1);\n\t\t\t\t\telse if (i.alongB === 0) // yes, somewhere between B's endpoints\n\t\t\t\t\t\teventDivide(ev1, i.pt);\n\t\t\t\t\telse if (i.alongB === 1) // yes, at exactly b2\n\t\t\t\t\t\teventDivide(ev1, b2);\n\t\t\t\t}\n\n\t\t\t\t// is B divided between its endpoints? (exclusive)\n\t\t\t\tif (i.alongB === 0){\n\t\t\t\t\tif (i.alongA === -1) // yes, at exactly a1\n\t\t\t\t\t\teventDivide(ev2, a1);\n\t\t\t\t\telse if (i.alongA === 0) // yes, somewhere between A's endpoints (exclusive)\n\t\t\t\t\t\teventDivide(ev2, i.pt);\n\t\t\t\t\telse if (i.alongA === 1) // yes, at exactly a2\n\t\t\t\t\t\teventDivide(ev2, a2);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//\n\t\t// main event loop\n\t\t//\n\t\tvar segments = [];\n\t\twhile (!event_root.isEmpty()){\n\t\t\tvar ev = event_root.getHead();\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.vert(ev.pt[0]);\n\n\t\t\tif (ev.isStart){\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.segmentNew(ev.seg, ev.primary);\n\n\t\t\t\tvar surrounding = statusFindSurrounding(ev);\n\t\t\t\tvar above = surrounding.before ? surrounding.before.ev : null;\n\t\t\t\tvar below = surrounding.after ? surrounding.after.ev : null;\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.tempStatus(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfunction checkBothIntersections(){\n\t\t\t\t\tif (above){\n\t\t\t\t\t\tvar eve = checkIntersection(ev, above);\n\t\t\t\t\t\tif (eve)\n\t\t\t\t\t\t\treturn eve;\n\t\t\t\t\t}\n\t\t\t\t\tif (below)\n\t\t\t\t\t\treturn checkIntersection(ev, below);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tvar eve = checkBothIntersections();\n\t\t\t\tif (eve){\n\t\t\t\t\t// ev and eve are equal\n\t\t\t\t\t// we'll keep eve and throw away ev\n\n\t\t\t\t\t// merge ev.seg's fill information into eve.seg\n\n\t\t\t\t\tif (selfIntersection){\n\t\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\t\tif (ev.seg.myFill.below === null)\n\t\t\t\t\t\t\ttoggle = true;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below;\n\n\t\t\t\t\t\t// merge two segments that belong to the same polygon\n\t\t\t\t\t\t// think of this as sandwiching two segments together, where `eve.seg` is\n\t\t\t\t\t\t// the bottom -- this will cause the above fill flag to toggle\n\t\t\t\t\t\tif (toggle)\n\t\t\t\t\t\t\teve.seg.myFill.above = !eve.seg.myFill.above;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// merge two segments that belong to different polygons\n\t\t\t\t\t\t// each segment has distinct knowledge, so no special logic is needed\n\t\t\t\t\t\t// note that this can only happen once per segment in this phase, because we\n\t\t\t\t\t\t// are guaranteed that all self-intersections are gone\n\t\t\t\t\t\teve.seg.otherFill = ev.seg.myFill;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.segmentUpdate(eve.seg);\n\n\t\t\t\t\tev.other.remove();\n\t\t\t\t\tev.remove();\n\t\t\t\t}\n\n\t\t\t\tif (event_root.getHead() !== ev){\n\t\t\t\t\t// something was inserted before us in the event queue, so loop back around and\n\t\t\t\t\t// process it before continuing\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.rewind(ev.seg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//\n\t\t\t\t// calculate fill flags\n\t\t\t\t//\n\t\t\t\tif (selfIntersection){\n\t\t\t\t\tvar toggle; // are we a toggling edge?\n\t\t\t\t\tif (ev.seg.myFill.below === null) // if we are a new segment...\n\t\t\t\t\t\ttoggle = true; // then we toggle\n\t\t\t\t\telse // we are a segment that has previous knowledge from a division\n\t\t\t\t\t\ttoggle = ev.seg.myFill.above !== ev.seg.myFill.below; // calculate toggle\n\n\t\t\t\t\t// next, calculate whether we are filled below us\n\t\t\t\t\tif (!below){ // if nothing is below us...\n\t\t\t\t\t\t// we are filled below us if the polygon is inverted\n\t\t\t\t\t\tev.seg.myFill.below = primaryPolyInverted;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// otherwise, we know the answer -- it's the same if whatever is below\n\t\t\t\t\t\t// us is filled above it\n\t\t\t\t\t\tev.seg.myFill.below = below.seg.myFill.above;\n\t\t\t\t\t}\n\n\t\t\t\t\t// since now we know if we're filled below us, we can calculate whether\n\t\t\t\t\t// we're filled above us by applying toggle to whatever is below us\n\t\t\t\t\tif (toggle)\n\t\t\t\t\t\tev.seg.myFill.above = !ev.seg.myFill.below;\n\t\t\t\t\telse\n\t\t\t\t\t\tev.seg.myFill.above = ev.seg.myFill.below;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// now we fill in any missing transition information, since we are all-knowing\n\t\t\t\t\t// at this point\n\n\t\t\t\t\tif (ev.seg.otherFill === null){\n\t\t\t\t\t\t// if we don't have other information, then we need to figure out if we're\n\t\t\t\t\t\t// inside the other polygon\n\t\t\t\t\t\tvar inside;\n\t\t\t\t\t\tif (!below){\n\t\t\t\t\t\t\t// if nothing is below us, then we're inside if the other polygon is\n\t\t\t\t\t\t\t// inverted\n\t\t\t\t\t\t\tinside =\n\t\t\t\t\t\t\t\tev.primary ? secondaryPolyInverted : primaryPolyInverted;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{ // otherwise, something is below us\n\t\t\t\t\t\t\t// so copy the below segment's other polygon's above\n\t\t\t\t\t\t\tif (ev.primary === below.primary)\n\t\t\t\t\t\t\t\tinside = below.seg.otherFill.above;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tinside = below.seg.myFill.above;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tev.seg.otherFill = {\n\t\t\t\t\t\t\tabove: inside,\n\t\t\t\t\t\t\tbelow: inside\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog){\n\t\t\t\t\tbuildLog.status(\n\t\t\t\t\t\tev.seg,\n\t\t\t\t\t\tabove ? above.seg : false,\n\t\t\t\t\t\tbelow ? below.seg : false\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// insert the status and remember it for later removal\n\t\t\t\tev.other.status = surrounding.insert(LinkedList.node({ ev: ev }));\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar st = ev.status;\n\n\t\t\t\tif (st === null){\n\t\t\t\t\tthrow new Error('PolyBool: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t\t\t'probably too small or too large');\n\t\t\t\t}\n\n\t\t\t\t// removing the status will create two new adjacent edges, so we'll need to check\n\t\t\t\t// for those\n\t\t\t\tif (status_root.exists(st.prev) && status_root.exists(st.next))\n\t\t\t\t\tcheckIntersection(st.prev.ev, st.next.ev);\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.statusRemove(st.ev.seg);\n\n\t\t\t\t// remove the status\n\t\t\t\tst.remove();\n\n\t\t\t\t// if we've reached this point, we've calculated everything there is to know, so\n\t\t\t\t// save the segment for reporting\n\t\t\t\tif (!ev.primary){\n\t\t\t\t\t// make sure `seg.myFill` actually points to the primary polygon though\n\t\t\t\t\tvar s = ev.seg.myFill;\n\t\t\t\t\tev.seg.myFill = ev.seg.otherFill;\n\t\t\t\t\tev.seg.otherFill = s;\n\t\t\t\t}\n\t\t\t\tsegments.push(ev.seg);\n\t\t\t}\n\n\t\t\t// remove the event and continue\n\t\t\tevent_root.getHead().remove();\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.done();\n\n\t\treturn segments;\n\t}\n\n\t// return the appropriate API depending on what we're doing\n\tif (!selfIntersection){\n\t\t// performing combination of polygons, so only deal with already-processed segments\n\t\treturn {\n\t\t\tcalculate: function(segments1, inverted1, segments2, inverted2){\n\t\t\t\t// segmentsX come from the self-intersection API, or this API\n\t\t\t\t// invertedX is whether we treat that list of segments as an inverted polygon or not\n\t\t\t\t// returns segments that can be used for further operations\n\t\t\t\tsegments1.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), true);\n\t\t\t\t});\n\t\t\t\tsegments2.forEach(function(seg){\n\t\t\t\t\teventAddSegment(segmentCopy(seg.start, seg.end, seg), false);\n\t\t\t\t});\n\t\t\t\treturn calculate(inverted1, inverted2);\n\t\t\t}\n\t\t};\n\t}\n\n\t// otherwise, performing self-intersection, so deal with regions\n\treturn {\n\t\taddRegion: function(region){\n\t\t\t// regions are a list of points:\n\t\t\t//  [ [0, 0], [100, 0], [50, 100] ]\n\t\t\t// you can add multiple regions before running calculate\n\t\t\tvar pt1;\n\t\t\tvar pt2 = region[region.length - 1];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tpt1 = pt2;\n\t\t\t\tpt2 = region[i];\n\n\t\t\t\tvar forward = eps.pointsCompare(pt1, pt2);\n\t\t\t\tif (forward === 0) // points are equal, so we have a zero-length segment\n\t\t\t\t\tcontinue; // just skip it\n\n\t\t\t\teventAddSegment(\n\t\t\t\t\tsegmentNew(\n\t\t\t\t\t\tforward < 0 ? pt1 : pt2,\n\t\t\t\t\t\tforward < 0 ? pt2 : pt1\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\tcalculate: function(inverted){\n\t\t\t// is the polygon inverted?\n\t\t\t// returns segments\n\t\t\treturn calculate(inverted, false);\n\t\t}\n\t};\n}\n\nmodule.exports = Intersecter;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// converts a list of segments into a list of regions, while also removing unnecessary verticies\n//\n\nfunction SegmentChainer(segments, eps, buildLog){\n\tvar chains = [];\n\tvar regions = [];\n\n\tsegments.forEach(function(seg){\n\t\tvar pt1 = seg.start;\n\t\tvar pt2 = seg.end;\n\t\tif (eps.pointsSame(pt1, pt2)){\n\t\t\tconsole.warn('PolyBool: Warning: Zero-length segment detected; your epsilon is ' +\n\t\t\t\t'probably too small or too large');\n\t\t\treturn;\n\t\t}\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainStart(seg);\n\n\t\t// search for two chains that this segment matches\n\t\tvar first_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar second_match = {\n\t\t\tindex: 0,\n\t\t\tmatches_head: false,\n\t\t\tmatches_pt1: false\n\t\t};\n\t\tvar next_match = first_match;\n\t\tfunction setMatch(index, matches_head, matches_pt1){\n\t\t\t// return true if we've matched twice\n\t\t\tnext_match.index = index;\n\t\t\tnext_match.matches_head = matches_head;\n\t\t\tnext_match.matches_pt1 = matches_pt1;\n\t\t\tif (next_match === first_match){\n\t\t\t\tnext_match = second_match;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnext_match = null;\n\t\t\treturn true; // we've matched twice, we're done here\n\t\t}\n\t\tfor (var i = 0; i < chains.length; i++){\n\t\t\tvar chain = chains[i];\n\t\t\tvar head  = chain[0];\n\t\t\tvar head2 = chain[1];\n\t\t\tvar tail  = chain[chain.length - 1];\n\t\t\tvar tail2 = chain[chain.length - 2];\n\t\t\tif (eps.pointsSame(head, pt1)){\n\t\t\t\tif (setMatch(i, true, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(head, pt2)){\n\t\t\t\tif (setMatch(i, true, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt1)){\n\t\t\t\tif (setMatch(i, false, true))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (eps.pointsSame(tail, pt2)){\n\t\t\t\tif (setMatch(i, false, false))\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (next_match === first_match){\n\t\t\t// we didn't match anything, so create a new chain\n\t\t\tchains.push([ pt1, pt2 ]);\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainNew(pt1, pt2);\n\t\t\treturn;\n\t\t}\n\n\t\tif (next_match === second_match){\n\t\t\t// we matched a single chain\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainMatch(first_match.index);\n\n\t\t\t// add the other point to the apporpriate end, and check to see if we've closed the\n\t\t\t// chain into a loop\n\n\t\t\tvar index = first_match.index;\n\t\t\tvar pt = first_match.matches_pt1 ? pt2 : pt1; // if we matched pt1, then we add pt2, etc\n\t\t\tvar addToHead = first_match.matches_head; // if we matched at head, then add to the head\n\n\t\t\tvar chain = chains[index];\n\t\t\tvar grow  = addToHead ? chain[0] : chain[chain.length - 1];\n\t\t\tvar grow2 = addToHead ? chain[1] : chain[chain.length - 2];\n\t\t\tvar oppo  = addToHead ? chain[chain.length - 1] : chain[0];\n\t\t\tvar oppo2 = addToHead ? chain[chain.length - 2] : chain[1];\n\n\t\t\tif (eps.pointsCollinear(grow2, grow, pt)){\n\t\t\t\t// grow isn't needed because it's directly between grow2 and pt:\n\t\t\t\t// grow2 ---grow---> pt\n\t\t\t\tif (addToHead){\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, pt);\n\t\t\t\t\tchain.shift();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, pt);\n\t\t\t\t\tchain.pop();\n\t\t\t\t}\n\t\t\t\tgrow = grow2; // old grow is gone... new grow is what grow2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsSame(oppo, pt)){\n\t\t\t\t// we're closing the loop, so remove chain from chains\n\t\t\t\tchains.splice(index, 1);\n\n\t\t\t\tif (eps.pointsCollinear(oppo2, oppo, grow)){\n\t\t\t\t\t// oppo isn't needed because it's directly between oppo2 and grow:\n\t\t\t\t\t// oppo2 ---oppo--->grow\n\t\t\t\t\tif (addToHead){\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveTail(first_match.index, grow);\n\t\t\t\t\t\tchain.pop();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (buildLog)\n\t\t\t\t\t\t\tbuildLog.chainRemoveHead(first_match.index, grow);\n\t\t\t\t\t\tchain.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainClose(first_match.index);\n\n\t\t\t\t// we have a closed chain!\n\t\t\t\tregions.push(chain);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// not closing a loop, so just add it to the apporpriate side\n\t\t\tif (addToHead){\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddHead(first_match.index, pt);\n\t\t\t\tchain.unshift(pt);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainAddTail(first_match.index, pt);\n\t\t\t\tchain.push(pt);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// otherwise, we matched two chains, so we need to combine those chains together\n\n\t\tfunction reverseChain(index){\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainReverse(index);\n\t\t\tchains[index].reverse(); // gee, that's easy\n\t\t}\n\n\t\tfunction appendChain(index1, index2){\n\t\t\t// index1 gets index2 appended to it, and index2 is removed\n\t\t\tvar chain1 = chains[index1];\n\t\t\tvar chain2 = chains[index2];\n\t\t\tvar tail  = chain1[chain1.length - 1];\n\t\t\tvar tail2 = chain1[chain1.length - 2];\n\t\t\tvar head  = chain2[0];\n\t\t\tvar head2 = chain2[1];\n\n\t\t\tif (eps.pointsCollinear(tail2, tail, head)){\n\t\t\t\t// tail isn't needed because it's directly between tail2 and head\n\t\t\t\t// tail2 ---tail---> head\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveTail(index1, tail);\n\t\t\t\tchain1.pop();\n\t\t\t\ttail = tail2; // old tail is gone... new tail is what tail2 was\n\t\t\t}\n\n\t\t\tif (eps.pointsCollinear(tail, head, head2)){\n\t\t\t\t// head isn't needed because it's directly between tail and head2\n\t\t\t\t// tail ---head---> head2\n\t\t\t\tif (buildLog)\n\t\t\t\t\tbuildLog.chainRemoveHead(index2, head);\n\t\t\t\tchain2.shift();\n\t\t\t}\n\n\t\t\tif (buildLog)\n\t\t\t\tbuildLog.chainJoin(index1, index2);\n\t\t\tchains[index1] = chain1.concat(chain2);\n\t\t\tchains.splice(index2, 1);\n\t\t}\n\n\t\tvar F = first_match.index;\n\t\tvar S = second_match.index;\n\n\t\tif (buildLog)\n\t\t\tbuildLog.chainConnect(F, S);\n\n\t\tvar reverseF = chains[F].length < chains[S].length; // reverse the shorter chain, if needed\n\t\tif (first_match.matches_head){\n\t\t\tif (second_match.matches_head){\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// <<<< F <<<< --- >>>> S >>>>\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\tappendChain(S, F);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif (second_match.matches_head){\n\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\tappendChain(F, S);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (reverseF){\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(F);\n\t\t\t\t\t// <<<< F <<<< --- <<<< S <<<<   logically same as:\n\t\t\t\t\t// >>>> S >>>> --- >>>> F >>>>\n\t\t\t\t\tappendChain(S, F);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// >>>> F >>>> --- <<<< S <<<<\n\t\t\t\t\treverseChain(S);\n\t\t\t\t\t// >>>> F >>>> --- >>>> S >>>>\n\t\t\t\t\tappendChain(F, S);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn regions;\n}\n\nmodule.exports = SegmentChainer;\n","// (c) Copyright 2016, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// filter a list of segments based on boolean operations\n//\n\nfunction select(segments, selection, buildLog){\n\tvar result = [];\n\tsegments.forEach(function(seg){\n\t\tvar index =\n\t\t\t(seg.myFill.above ? 8 : 0) +\n\t\t\t(seg.myFill.below ? 4 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.above) ? 2 : 0) +\n\t\t\t((seg.otherFill && seg.otherFill.below) ? 1 : 0);\n\t\tif (selection[index] !== 0){\n\t\t\t// copy the segment to the results, while also calculating the fill status\n\t\t\tresult.push({\n\t\t\t\tid: buildLog ? buildLog.segmentId() : -1,\n\t\t\t\tstart: seg.start,\n\t\t\t\tend: seg.end,\n\t\t\t\tmyFill: {\n\t\t\t\t\tabove: selection[index] === 1, // 1 if filled above\n\t\t\t\t\tbelow: selection[index] === 2  // 2 if filled below\n\t\t\t\t},\n\t\t\t\totherFill: null\n\t\t\t});\n\t\t}\n\t});\n\n\tif (buildLog)\n\t\tbuildLog.selected(result);\n\n\treturn result;\n}\n\nvar SegmentSelector = {\n\tunion: function(segments, buildLog){ // primary | secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 2, 0, 0,\n\t\t\t1, 0, 1, 0,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\tintersect: function(segments, buildLog){ // primary & secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   yes filled below    2\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled below    2\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   yes filled above    1\n\t\t//    1      0      1      1   =>   yes filled above    1\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled below    2\n\t\t//    1      1      1      0   =>   yes filled above    1\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 1, 0\n\t\t], buildLog);\n\t},\n\tdifference: function(segments, buildLog){ // primary - secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   no                  0\n\t\t//    0      0      1      0   =>   no                  0\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled below    2\n\t\t//    0      1      1      1   =>   no                  0\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   yes filled above    1\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   no                  0\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 0, 0, 0,\n\t\t\t2, 0, 2, 0,\n\t\t\t1, 1, 0, 0,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t},\n\tdifferenceRev: function(segments, buildLog){ // secondary - primary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   no                  0\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   yes filled above    1\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   no                  0\n\t\t//    1      0      0      1   =>   yes filled below    2\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   no                  0\n\t\t//    1      1      1      0   =>   no                  0\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t0, 0, 1, 1,\n\t\t\t0, 2, 0, 2,\n\t\t\t0, 0, 0, 0\n\t\t], buildLog);\n\t},\n\txor: function(segments, buildLog){ // primary ^ secondary\n\t\t// above1 below1 above2 below2    Keep?               Value\n\t\t//    0      0      0      0   =>   no                  0\n\t\t//    0      0      0      1   =>   yes filled below    2\n\t\t//    0      0      1      0   =>   yes filled above    1\n\t\t//    0      0      1      1   =>   no                  0\n\t\t//    0      1      0      0   =>   yes filled below    2\n\t\t//    0      1      0      1   =>   no                  0\n\t\t//    0      1      1      0   =>   no                  0\n\t\t//    0      1      1      1   =>   yes filled above    1\n\t\t//    1      0      0      0   =>   yes filled above    1\n\t\t//    1      0      0      1   =>   no                  0\n\t\t//    1      0      1      0   =>   no                  0\n\t\t//    1      0      1      1   =>   yes filled below    2\n\t\t//    1      1      0      0   =>   no                  0\n\t\t//    1      1      0      1   =>   yes filled above    1\n\t\t//    1      1      1      0   =>   yes filled below    2\n\t\t//    1      1      1      1   =>   no                  0\n\t\treturn select(segments, [\n\t\t\t0, 2, 1, 0,\n\t\t\t2, 0, 0, 1,\n\t\t\t1, 0, 0, 2,\n\t\t\t0, 1, 2, 0\n\t\t], buildLog);\n\t}\n};\n\nmodule.exports = SegmentSelector;\n","// (c) Copyright 2017, Sean Connelly (@voidqk), http://syntheti.cc\n// MIT License\n// Project Home: https://github.com/voidqk/polybooljs\n\n//\n// convert between PolyBool polygon format and GeoJSON formats (Polygon and MultiPolygon)\n//\n\nvar GeoJSON = {\n\t// convert a GeoJSON object to a PolyBool polygon\n\ttoPolygon: function(PolyBool, geojson){\n\n\t\t// converts list of LineString's to segments\n\t\tfunction GeoPoly(coords){\n\t\t\t// check for empty coords\n\t\t\tif (coords.length <= 0)\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [] });\n\n\t\t\t// convert LineString to segments\n\t\t\tfunction LineString(ls){\n\t\t\t\t// remove tail which should be the same as head\n\t\t\t\tvar reg = ls.slice(0, ls.length - 1);\n\t\t\t\treturn PolyBool.segments({ inverted: false, regions: [reg] });\n\t\t\t}\n\n\t\t\t// the first LineString is considered the outside\n\t\t\tvar out = LineString(coords[0]);\n\n\t\t\t// the rest of the LineStrings are considered interior holes, so subtract them from the\n\t\t\t// current result\n\t\t\tfor (var i = 1; i < coords.length; i++)\n\t\t\t\tout = PolyBool.selectDifference(PolyBool.combine(out, LineString(coords[i])));\n\n\t\t\treturn out;\n\t\t}\n\n\t\tif (geojson.type === 'Polygon'){\n\t\t\t// single polygon, so just convert it and we're done\n\t\t\treturn PolyBool.polygon(GeoPoly(geojson.coordinates));\n\t\t}\n\t\telse if (geojson.type === 'MultiPolygon'){\n\t\t\t// multiple polygons, so union all the polygons together\n\t\t\tvar out = PolyBool.segments({ inverted: false, regions: [] });\n\t\t\tfor (var i = 0; i < geojson.coordinates.length; i++)\n\t\t\t\tout = PolyBool.selectUnion(PolyBool.combine(out, GeoPoly(geojson.coordinates[i])));\n\t\t\treturn PolyBool.polygon(out);\n\t\t}\n\t\tthrow new Error('PolyBool: Cannot convert GeoJSON object to PolyBool polygon');\n\t},\n\n\t// convert a PolyBool polygon to a GeoJSON object\n\tfromPolygon: function(PolyBool, eps, poly){\n\t\t// make sure out polygon is clean\n\t\tpoly = PolyBool.polygon(PolyBool.segments(poly));\n\n\t\t// test if r1 is inside r2\n\t\tfunction regionInsideRegion(r1, r2){\n\t\t\t// we're guaranteed no lines intersect (because the polygon is clean), but a vertex\n\t\t\t// could be on the edge -- so we just average pt[0] and pt[1] to produce a point on the\n\t\t\t// edge of the first line, which cannot be on an edge\n\t\t\treturn eps.pointInsideRegion([\n\t\t\t\t(r1[0][0] + r1[1][0]) * 0.5,\n\t\t\t\t(r1[0][1] + r1[1][1]) * 0.5\n\t\t\t], r2);\n\t\t}\n\n\t\t// calculate inside heirarchy\n\t\t//\n\t\t//  _____________________   _______    roots -> A       -> F\n\t\t// |          A          | |   F   |            |          |\n\t\t// |  _______   _______  | |  ___  |            +-- B      +-- G\n\t\t// | |   B   | |   C   | | | |   | |            |   |\n\t\t// | |  ___  | |  ___  | | | |   | |            |   +-- D\n\t\t// | | | D | | | | E | | | | | G | |            |\n\t\t// | | |___| | | |___| | | | |   | |            +-- C\n\t\t// | |_______| |_______| | | |___| |                |\n\t\t// |_____________________| |_______|                +-- E\n\n\t\tfunction newNode(region){\n\t\t\treturn {\n\t\t\t\tregion: region,\n\t\t\t\tchildren: []\n\t\t\t};\n\t\t}\n\n\t\tvar roots = newNode(null);\n\n\t\tfunction addChild(root, region){\n\t\t\t// first check if we're inside any children\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(region, child.region)){\n\t\t\t\t\t// we are, so insert inside them instead\n\t\t\t\t\taddChild(child, region);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// not inside any children, so check to see if any children are inside us\n\t\t\tvar node = newNode(region);\n\t\t\tfor (var i = 0; i < root.children.length; i++){\n\t\t\t\tvar child = root.children[i];\n\t\t\t\tif (regionInsideRegion(child.region, region)){\n\t\t\t\t\t// oops... move the child beneath us, and remove them from root\n\t\t\t\t\tnode.children.push(child);\n\t\t\t\t\troot.children.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now we can add ourselves\n\t\t\troot.children.push(node);\n\t\t}\n\n\t\t// add all regions to the root\n\t\tfor (var i = 0; i < poly.regions.length; i++){\n\t\t\tvar region = poly.regions[i];\n\t\t\tif (region.length < 3) // regions must have at least 3 points (sanity check)\n\t\t\t\tcontinue;\n\t\t\taddChild(roots, region);\n\t\t}\n\n\t\t// with our heirarchy, we can distinguish between exterior borders, and interior holes\n\t\t// the root nodes are exterior, children are interior, children's children are exterior,\n\t\t// children's children's children are interior, etc\n\n\t\t// while we're at it, exteriors are counter-clockwise, and interiors are clockwise\n\n\t\tfunction forceWinding(region, clockwise){\n\t\t\t// first, see if we're clockwise or counter-clockwise\n\t\t\t// https://en.wikipedia.org/wiki/Shoelace_formula\n\t\t\tvar winding = 0;\n\t\t\tvar last_x = region[region.length - 1][0];\n\t\t\tvar last_y = region[region.length - 1][1];\n\t\t\tvar copy = [];\n\t\t\tfor (var i = 0; i < region.length; i++){\n\t\t\t\tvar curr_x = region[i][0];\n\t\t\t\tvar curr_y = region[i][1];\n\t\t\t\tcopy.push([curr_x, curr_y]); // create a copy while we're at it\n\t\t\t\twinding += curr_y * last_x - curr_x * last_y;\n\t\t\t\tlast_x = curr_x;\n\t\t\t\tlast_y = curr_y;\n\t\t\t}\n\t\t\t// this assumes Cartesian coordinates (Y is positive going up)\n\t\t\tvar isclockwise = winding < 0;\n\t\t\tif (isclockwise !== clockwise)\n\t\t\t\tcopy.reverse();\n\t\t\t// while we're here, the last point must be the first point...\n\t\t\tcopy.push([copy[0][0], copy[0][1]]);\n\t\t\treturn copy;\n\t\t}\n\n\t\tvar geopolys = [];\n\n\t\tfunction addExterior(node){\n\t\t\tvar poly = [forceWinding(node.region, false)];\n\t\t\tgeopolys.push(poly);\n\t\t\t// children of exteriors are interior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\tpoly.push(getInterior(node.children[i]));\n\t\t}\n\n\t\tfunction getInterior(node){\n\t\t\t// children of interiors are exterior\n\t\t\tfor (var i = 0; i < node.children.length; i++)\n\t\t\t\taddExterior(node.children[i]);\n\t\t\t// return the clockwise interior\n\t\t\treturn forceWinding(node.region, true);\n\t\t}\n\n\t\t// root nodes are exterior\n\t\tfor (var i = 0; i < roots.children.length; i++)\n\t\t\taddExterior(roots.children[i]);\n\n\t\t// lastly, construct the approrpriate GeoJSON object\n\n\t\tif (geopolys.length <= 0) // empty GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: [] };\n\t\tif (geopolys.length == 1) // use a GeoJSON Polygon\n\t\t\treturn { type: 'Polygon', coordinates: geopolys[0] };\n\t\treturn { // otherwise, use a GeoJSON MultiPolygon\n\t\t\ttype: 'MultiPolygon',\n\t\t\tcoordinates: geopolys\n\t\t};\n\t}\n};\n\nmodule.exports = GeoJSON;\n","/*\n * @copyright 2016 Sean Connelly (@voidqk), http://syntheti.cc\n * @license MIT\n * @preserve Project Home: https://github.com/voidqk/polybooljs\n */\n\nvar BuildLog = require('./lib/build-log');\nvar Epsilon = require('./lib/epsilon');\nvar Intersecter = require('./lib/intersecter');\nvar SegmentChainer = require('./lib/segment-chainer');\nvar SegmentSelector = require('./lib/segment-selector');\nvar GeoJSON = require('./lib/geojson');\n\nvar buildLog = false;\nvar epsilon = Epsilon();\n\nvar PolyBool;\nPolyBool = {\n\t// getter/setter for buildLog\n\tbuildLog: function(bl){\n\t\tif (bl === true)\n\t\t\tbuildLog = BuildLog();\n\t\telse if (bl === false)\n\t\t\tbuildLog = false;\n\t\treturn buildLog === false ? false : buildLog.list;\n\t},\n\t// getter/setter for epsilon\n\tepsilon: function(v){\n\t\treturn epsilon.epsilon(v);\n\t},\n\n\t// core API\n\tsegments: function(poly){\n\t\tvar i = Intersecter(true, epsilon, buildLog);\n\t\tpoly.regions.forEach(i.addRegion);\n\t\treturn {\n\t\t\tsegments: i.calculate(poly.inverted),\n\t\t\tinverted: poly.inverted\n\t\t};\n\t},\n\tcombine: function(segments1, segments2){\n\t\tvar i3 = Intersecter(false, epsilon, buildLog);\n\t\treturn {\n\t\t\tcombined: i3.calculate(\n\t\t\t\tsegments1.segments, segments1.inverted,\n\t\t\t\tsegments2.segments, segments2.inverted\n\t\t\t),\n\t\t\tinverted1: segments1.inverted,\n\t\t\tinverted2: segments2.inverted\n\t\t};\n\t},\n\tselectUnion: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.union(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 || combined.inverted2\n\t\t}\n\t},\n\tselectIntersect: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.intersect(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectDifference: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.difference(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 && !combined.inverted2\n\t\t}\n\t},\n\tselectDifferenceRev: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.differenceRev(combined.combined, buildLog),\n\t\t\tinverted: !combined.inverted1 && combined.inverted2\n\t\t}\n\t},\n\tselectXor: function(combined){\n\t\treturn {\n\t\t\tsegments: SegmentSelector.xor(combined.combined, buildLog),\n\t\t\tinverted: combined.inverted1 !== combined.inverted2\n\t\t}\n\t},\n\tpolygon: function(segments){\n\t\treturn {\n\t\t\tregions: SegmentChainer(segments.segments, epsilon, buildLog),\n\t\t\tinverted: segments.inverted\n\t\t};\n\t},\n\n\t// GeoJSON converters\n\tpolygonFromGeoJSON: function(geojson){\n\t\treturn GeoJSON.toPolygon(PolyBool, geojson);\n\t},\n\tpolygonToGeoJSON: function(poly){\n\t\treturn GeoJSON.fromPolygon(PolyBool, epsilon, poly);\n\t},\n\n\t// helper functions for common operations\n\tunion: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectUnion);\n\t},\n\tintersect: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectIntersect);\n\t},\n\tdifference: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifference);\n\t},\n\tdifferenceRev: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectDifferenceRev);\n\t},\n\txor: function(poly1, poly2){\n\t\treturn operate(poly1, poly2, PolyBool.selectXor);\n\t}\n};\n\nfunction operate(poly1, poly2, selector){\n\tvar seg1 = PolyBool.segments(poly1);\n\tvar seg2 = PolyBool.segments(poly2);\n\tvar comb = PolyBool.combine(seg1, seg2);\n\tvar seg3 = selector(comb);\n\treturn PolyBool.polygon(seg3);\n}\n\nif (typeof window === 'object')\n\twindow.PolyBool = PolyBool;\n\nmodule.exports = PolyBool;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// import * as geometric from 'geometric';\n\nimport Vector2 from \"./vector2\";\n\nexport default class Segment {\n\n\tget ax() {\n\t\treturn this.a.x;\n\t}\n\tset ax(x) {\n\t\tthis.a.x = x;\n\t}\n\tget ay() {\n\t\treturn this.a.y;\n\t}\n\tset ay(y) {\n\t\tthis.a.y = y;\n\t}\n\tget bx() {\n\t\treturn this.b.x;\n\t}\n\tset bx(x) {\n\t\tthis.b.x = x;\n\t}\n\tget by() {\n\t\treturn this.b.y;\n\t}\n\tset by(y) {\n\t\tthis.b.y = y;\n\t}\n\n\tconstructor(ax = 0, ay = 0, bx = 0, by = 0) {\n\t\tthis.a = new Vector2(ax, ay);\n\t\tthis.b = new Vector2(bx, by);\n\t}\n\n\tdraw() {\n\t\tdrawSegment(this);\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\t}\n\n\tbounce(s) {\n\t\tconst i = this.intersect(s);\n\t\tif (i) {\n\t\t\tconst r = this.reflect(i, s.b);\n\t\t\tconst d = new Vector2(r.x - i.x, r.y - i.y).normalize();\n\t\t\treturn { r, d };\n\t\t}\n\t}\n\n\tintersect(s) {\n\t\tconst i = this.getIntersection(s);\n\t\tif (i && i.intersectA && i.intersectB) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treflect(intersection, rayTip) {\n\t\tconst n = this.normal();\n\t\tconst v = new Vector2(\n\t\t\trayTip.x - intersection.x,\n\t\t\trayTip.y - intersection.y\n\t\t);\n\t\tconst d = n.dot(v);\n\t\tconst dotNormal = new Vector2(d * n.x, d * n.y);\n\t\tconst reflection = new Vector2(\n\t\t\trayTip.x - dotNormal.x * 2,\n\t\t\trayTip.y - dotNormal.y * 2\n\t\t);\n\t\t// console.log(dotNormal, intersection, rayTip);\n\t\treturn reflection;\n\t\t// console.log(direction);\n\t}\n\n\tnormal(p) {\n\t\tconst dx = this.b.x - this.a.x;\n\t\tconst dy = this.b.y - this.a.y;\n\t\t// const n = new Vector2(-dy, dx); // then the normals are (-dy, dx) and (dy, -dx).\n\t\tconst n = new Vector2(dy, -dx);\n\t\treturn n.normalize();\n\t}\n\n\tvector(iX, iY, rayTipX, rayTipY) {\n\t\tconst rayX = rayTipX - iX;\n\t\tconst rayY = rayTipY - iY;\n\t\treturn new Vector2(rayX, rayY);\n\t}\n\n\tgetIntersection(s) {\n\t\t// if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t\tlet denominator,\n\t\t\ta,\n\t\t\tb,\n\t\t\tnumerator1,\n\t\t\tnumerator2,\n\t\t\tresult = new Vector2();\n\t\t/*\n\t\t{\n\t\t\tx: null,\n\t\t\ty: null,\n\t\t\tintersectA: false,\n\t\t\tintersectB: false\n\t\t};\n\t\t*/\n\t\tdenominator =\n\t\t\t(this.b.y - this.a.y) * (s.b.x - s.a.x) -\n\t\t\t(this.b.x - this.a.x) * (s.b.y - s.a.y);\n\t\tif (denominator === 0) {\n\t\t\treturn result;\n\t\t}\n\t\ta = s.a.y - this.a.y;\n\t\tb = s.a.x - this.a.x;\n\t\tnumerator1 = (this.b.x - this.a.x) * a - (this.b.y - this.a.y) * b;\n\t\tnumerator2 = (s.b.x - s.a.x) * a - (s.b.y - s.a.y) * b;\n\t\ta = numerator1 / denominator;\n\t\tb = numerator2 / denominator;\n\t\t// if we cast these lines infinitely in both directions, they intersect here:\n\t\tresult.x = s.a.x + a * (s.b.x - s.a.x);\n\t\tresult.y = s.a.y + a * (s.b.y - s.a.y);\n\t\t/*\n\t\t// it is worth noting that this should be the same as:\n\t\tx = this.a.x + (b * (this.b.x - this.a.x));\n\t\ty = this.a.x + (b * (this.b.y - this.a.y));\n\t\t*/\n\t\t// if line1 is a segment and line2 is infinite, they intersect if:\n\t\tif (a > 0 && a < 1) {\n\t\t\tresult.intersectA = true;\n\t\t}\n\t\t// if line2 is a segment and line1 is infinite, they intersect if:\n\t\tif (b > 0 && b < 1) {\n\t\t\tresult.intersectB = true;\n\t\t}\n\t\t// if line1 and line2 are segments, they intersect if both of the above are true\n\t\treturn result;\n\t}\n\n\thit(actor, tolerance) {\n\t\t// return geometric.pointOnLine([px, py], [[this.ax, this.ay], [this.bx, this.by]]);\n\t\tconst hit = Segment.calcIsInsideThickLineSegment(actor.segment.b.x, actor.segment.b.y, this.ax, this.ay, this.bx, this.by, tolerance);\n\t\tif (hit) {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\t// The most useful function. Returns bool true, if the mouse point is actually inside the (finite) line, given a line thickness from the theoretical line away. It also assumes that the line end points are circular, not square.\n\tstatic calcIsInsideThickLineSegment(px, py, ax, ay, bx, by, tolerance = 0.1) {\n\t\tconst L2 = ((bx - ax) * (bx - ax) + (by - ay) * (by - ay));\n\t\tif (L2 == 0) return false;\n\t\tconst r = ((px - ax) * (bx - ax) + (py - ay) * (by - ay)) / L2;\n\t\t// Assume line thickness is circular\n\t\tif (r < 0) {\n\t\t\t// Outside a\n\t\t\treturn (Math.sqrt((ax - px) * (ax - px) + (ay - py) * (ay - py)) <= tolerance);\n\t\t} else if ((0 <= r) && (r <= 1)) {\n\t\t\t// On the line segment\n\t\t\tvar s = ((ay - py) * (bx - ax) - (ax - px) * (by - ay)) / L2;\n\t\t\treturn (Math.abs(s) * Math.sqrt(L2) <= tolerance);\n\t\t} else {\n\t\t\t// Outside b\n\t\t\treturn (Math.sqrt((bx - px) * (bx - px) + (by - py) * (by - py)) <= tolerance);\n\t\t}\n\t}\n\n}\n","export const State = {\n    ended: false,\n    won: false,\n    paused: false,\n    then: Date.now(),\n    soundtrack: null,\n    gameWon: null,\n    gameLost: null,\n    timer: 30,\n    frameCount: 0,\n    keys: {},\n    score: 0,\n}","import PolyBool from 'polybooljs';\nimport Segment from './segment';\nimport { State } from './state';\n\nexport default class Polygon {\n\n\tconstructor(points) {\n\t\tthis.segments = [];\n\t\tif (points && points.length > 1) {\n\t\t\tpoints.forEach((p, i) => {\n\t\t\t\tif (i < points.length - 2) {\n\t\t\t\t\tthis.segments.push(new Segment(p[0], p[1], points[i + 1][0], points[i + 1][1]));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tboolean(points) {\n\t\tconst poly1 = { regions: [this.getPoints().map(p => [p.x, p.y])] };\n\t\t// const poly2 = { regions: [polygon.getPoints().map(p => [p.x, p.y])] };\n\t\tconst poly2 = { regions: [points] };\n\t\tconst operation = PolyBool.difference(poly1, poly2); // poly1 - poly2\n\t\tconsole.log('segments', this.segments);\n\t\tconst segments = [];\n\t\toperation.regions.forEach(points => {\n\t\t\tpoints.forEach((p, i) => {\n\t\t\t\tif (i < points.length - 2) {\n\t\t\t\t\tsegments.push(new Segment(p[0], p[1], points[i + 1][0], points[i + 1][1]));\n\t\t\t\t} else {\n\t\t\t\t\tsegments.push(new Segment(p[0], p[1], points[0][0], points[0][1]));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.segments = segments;\n\t\tconsole.log('segments', segments);\n\t}\n\n\trebuild(points) {\n\t\tconst segments = [];\n\t\tfor (let i = 0; i < points.length - 1; i++) {\n\t\t\tconst p = points[i];\n\t\t\tsegments.push(new Segment(p.x, p.y, points[i + 1].x, points[i + 1].y));\n\t\t}\n\t\tthis.segments = segments;\n\t\tconsole.log('segments', segments);\n\t}\n\n\thit(actor, tolerance) {\n\t\treturn this.segments.reduce((p, c) => {\n\t\t\treturn p || c.hit(actor, tolerance);\n\t\t}, false);\n\t}\n\n\thitSegments(actor, tolerance) {\n\t\tfor (let i = 0; i < this.segments.length - 1; i++) {\n\t\t\tconst s = this.segments[i].hit(actor, tolerance);\n\t\t\tif (s) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t}\n\n\tintersect(actor) {\n\t\treturn this.segments.reduce((p, c) => {\n\t\t\treturn p || c.intersect(actor.segment);\n\t\t}, false);\n\t}\n\n\tinside(actor) {\n\t\tconst points = this.getPoints();\n\t\treturn this.isPointInside(actor.segment.b, points);\n\t}\n\n\tbounce(segment) {\n\t\tfor (let i = 0; i < this.segments.length; i++) {\n\t\t\tconst bounce = this.segments[i].bounce(segment);\n\t\t\tif (bounce) {\n\t\t\t\treturn bounce;\n\t\t\t}\n\t\t}\n\t}\n\n\tupdate() {\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.lineWidth = \"5\";\n\t\tctx.strokeStyle = \"green\";\n\t\tctx.fillStyle = \"black\";\n\t\tconst t = this.segments.length;\n\t\tfor (let i = 0; i < t; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t}\n\t\t\tif (i === t - 1) {\n\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t}\n\t\t}\n\t\tctx.stroke();\n\t\tctx.fill();\n\t}\n\n\tgetPoints(closed) {\n\t\tconst points = [];\n\t\tfor (let i = 0; i < this.segments.length; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tpoints.push(s.a);\n\t\t}\n\t\tif (this.segments.length && closed) {\n\t\t\tpoints.push(this.segments[this.segments.length - 1].b);\n\t\t}\n\t\treturn points;\n\t}\n\n\tisPointInside(p, points) {\n\t\tlet inside = false;\n\t\tlet minX = points[0].x,\n\t\t\tmaxX = points[0].x;\n\t\tlet minY = points[0].y,\n\t\t\tmaxY = points[0].y;\n\t\tfor (let n = 1; n < points.length; n++) {\n\t\t\tconst q = points[n];\n\t\t\tminX = Math.min(q.x, minX);\n\t\t\tmaxX = Math.max(q.x, maxX);\n\t\t\tminY = Math.min(q.y, minY);\n\t\t\tmaxY = Math.max(q.y, maxY);\n\t\t}\n\t\tif (p.x < minX || p.x > maxX || p.y < minY || p.y > maxY) {\n\t\t\treturn false;\n\t\t}\n\t\tlet i = 0,\n\t\t\tj = points.length - 1;\n\t\tfor (i, j; i < points.length; j = i++) {\n\t\t\tif ((points[i].y > p.y) != (points[j].y > p.y) && p.x < (points[j].x - points[i].x) * (p.y - points[i].y) / (points[j].y - points[i].y) + points[i].x) {\n\t\t\t\tinside = !inside;\n\t\t\t}\n\t\t}\n\t\treturn inside;\n\t}\n\n}\n","import Polygon from './polygon';\nimport Segment from './segment';\nimport { State } from './state';\nimport Vector2 from './vector2';\n\nexport default class Cut extends Polygon {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.direction = new Vector2();\n\t\tthis.start = new Vector2();\n\t\tthis.end = new Vector2();\n\t}\n\n\tmove(actor) {\n\t\tlet segment;\n\t\tif (!this.segments.length) {\n\t\t\tthis.start.copy(actor.position);\n\t\t\tsegment = new Segment(actor.position.x - 1 * actor.direction.x, actor.position.y - 1 * actor.direction.y, actor.nx, actor.ny);\n\t\t\tthis.segments.push(segment);\n\t\t} else if (Math.abs(this.direction.x) !== Math.abs(actor.direction.x)) { // direction changed\n\t\t\tconst s = this.segments[this.segments.length - 1];\n\t\t\tsegment = new Segment(s.b.x, s.b.y, actor.nx, actor.ny);\n\t\t\tthis.segments.push(segment);\n\t\t} else {\n\t\t\tsegment = this.segments[this.segments.length - 1];\n\t\t\tsegment.b.x = actor.nx;\n\t\t\tsegment.b.y = actor.ny;\n\t\t}\n\t\tthis.end.x = segment.b.x;\n\t\tthis.end.y = segment.b.y;\n\t\tthis.direction.x = actor.direction.x;\n\t\tthis.direction.y = actor.direction.y;\n\t}\n\n\tclose(actor) {\n\t\tthis.segments = [];\n\t}\n\n\treset(actor) {\n\t\tactor.position.copy(this.start);\n\t\tthis.direction.x = 0;\n\t\tthis.direction.y = 0;\n\t\tthis.segments = [];\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.lineWidth = \"5\";\n\t\tctx.strokeStyle = \"white\";\n\t\tconst t = this.segments.length;\n\t\tfor (let i = 0; i < t; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t}\n\t\t\tif (i === t - 1) {\n\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t}\n\t\t}\n\t\tctx.stroke();\n\t}\n\n}\n","import Segment from './segment';\nimport { State } from './state';\nimport Vector2 from './vector2';\n\nexport default class Enemy {\n\n\tget nx() {\n\t\treturn this.position.x + this.direction.x * this.speed;\n\t}\n\n\tget ny() {\n\t\treturn this.position.y + this.direction.y * this.speed;\n\t}\n\n\tconstructor() {\n\t\tconst ground = State.ground;\n\t\tthis.position = new Vector2(ground.x(0.5), ground.y(0.5));\n\t\tthis.direction = new Vector2(0.5 + Math.random() * 0.5 * (Math.random() > 0.5 ? 1 : -1), 0.5 + Math.random() * 0.5 * (Math.random() > 0.5 ? 1 : -1)).normalize();\n\t\tthis.speed = 3 + Math.random() * 2;\n\t\tthis.segment = new Segment();\n\t}\n\n\tupdate() {\n\t\tif (!this.checkCollision()) {\n\t\t\tthis.move();\n\t\t}\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.arc(this.position.x, this.position.y, 5, 0, 2 * Math.PI, true);\n\t\tctx.stroke();\n\t\tctx.fillStyle = \"red\";\n\t\tctx.fill();\n\t}\n\n\tcheckCollision() {\n\t\tconst ground = State.ground;\n\t\tconst cut = State.cut;\n\t\tconst nx = this.nx;\n\t\tconst ny = this.ny;\n\t\tconst segment = this.segment;\n\t\tsegment.a.set(this.position.x, this.position.y);\n\t\tsegment.b.set(nx, ny);\n\t\tif (cut.hit(this, 5)) {\n\t\t\tconst player = State.player;\n\t\t\tcut.reset(player);\n\t\t} else {\n\t\t\tconst bounce = ground.bounce(segment);\n\t\t\tif (bounce) {\n\t\t\t\t// this.position.copy(bounce.r);\n\t\t\t\t// this.direction.x *= -1;\n\t\t\t\t// this.direction.y *= -1;\n\t\t\t\tthis.direction.copy(bounce.d);\n\t\t\t}\n\t\t\treturn bounce;\n\t\t}\n\t}\n\n\tmove() {\n\t\tthis.position.x = this.nx;\n\t\tthis.position.y = this.ny;\n\t}\n\n}\n","export default class Rect {\n\n\tconstructor(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.set();\n\t}\n\n\tset() {\n\t\tthis.top = this.y;\n\t\tthis.left = this.x;\n\t\tthis.right = this.left + this.width;\n\t\tthis.bottom = this.top + this.height;\n\t\tthis.setCenter();\n\t}\n\n\tstatic contains(rect, left, top) {\n\t\treturn rect.top <= top && top <= rect.bottom && rect.left <= left && left <= rect.right;\n\t}\n\n\tstatic intersectRect(r1, r2) {\n\t\treturn !(r2.left > r1.right ||\n\t\t\tr2.right < r1.left ||\n\t\t\tr2.top > r1.bottom ||\n\t\t\tr2.bottom < r1.top);\n\t}\n\n\tstatic fromNode(node) {\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tconst rect = node.rect_ || (node.rect_ = new Rect());\n\t\tconst rects = node.getClientRects();\n\t\tif (!rects.length) {\n\t\t\t// console.log(rects, node);\n\t\t\treturn rect;\n\t\t}\n\t\tconst boundingRect = node.getBoundingClientRect();\n\t\t// rect.top: boundingRect.top + defaultView.pageYOffset,\n\t\t// rect.left: boundingRect.left + defaultView.pageXOffset,\n\t\trect.x = boundingRect.left;\n\t\trect.y = boundingRect.top;\n\t\trect.top = boundingRect.top;\n\t\trect.left = boundingRect.left;\n\t\trect.width = boundingRect.width;\n\t\trect.height = boundingRect.height;\n\t\trect.right = rect.left + rect.width;\n\t\trect.bottom = rect.top + rect.height;\n\t\trect.setCenter();\n\t\treturn rect;\n\t}\n\n\tsetSize(w, h) {\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis.right = this.left + this.width;\n\t\tthis.bottom = this.top + this.height;\n\t\tthis.setCenter();\n\t\t// console.log(w, h);\n\t}\n\n\tsetCenter() {\n\t\tconst center = this.center || (this.center = {});\n\t\tcenter.top = this.top + this.height / 2;\n\t\tcenter.left = this.left + this.width / 2;\n\t\tcenter.x = center.left;\n\t\tcenter.y = center.top;\n\t}\n\n\tcontains(left, top) {\n\t\treturn Rect.contains(this, left, top);\n\t}\n\n\tintersect(rect) {\n\t\treturn Rect.intersectRect(this, rect);\n\t}\n\n\tintersection(rect) {\n\t\tconst intersection = this.intersection_ || (this.intersection_ = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tpow: {\n\t\t\t\tx: -1,\n\t\t\t\ty: -1\n\t\t\t},\n\t\t\toffset: function(offset) {\n\t\t\t\toffset = offset || 0;\n\t\t\t\tconst pow = (this.top - this.rect.height / 2 + offset) / -this.height;\n\t\t\t\treturn pow;\n\t\t\t},\n\t\t\tscroll: function(offset) {\n\t\t\t\toffset = offset || 0;\n\t\t\t\tconst pow = (this.top - this.rect.height / 2 + offset) / -this.height;\n\t\t\t\treturn pow;\n\t\t\t}\n\t\t});\n\t\tintersection.left = this.left;\n\t\tintersection.top = this.top;\n\t\tintersection.width = this.width;\n\t\tintersection.height = this.height;\n\t\tintersection.x = this.left + this.width / 2;\n\t\tintersection.y = this.top + this.height / 2;\n\t\tintersection.rect = rect;\n\t\tconst pow = intersection.offset(0);\n\t\tintersection.pow.y = pow;\n\t\treturn intersection;\n\t}\n\n}\n","import Polygon from './polygon';\nimport Rect from './rect';\nimport Segment from './segment';\nimport { State } from './state';\n\nexport default class Ground extends Polygon {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst canvas = State.canvas;\n\t\tthis.rect = new Rect(20, 20, canvas.size.x - 40, canvas.size.y - 40);\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tconst rect = this.rect;\n\t\tthis.segments = [\n\t\t\tnew Segment(rect.left, rect.top, rect.right, rect.top), // top\n\t\t\tnew Segment(rect.right, rect.top, rect.right, rect.bottom), // right\n\t\t\tnew Segment(rect.right, rect.bottom, rect.left, rect.bottom), // bottom\n\t\t\tnew Segment(rect.left, rect.bottom, rect.left, rect.top), // left\n\t\t];\n\t}\n\n\tremove(polygon) {\n\t\tif (polygon.segments.length) {\n\t\t\tconst i1 = this.segments.reduce((p, c, i) => {\n\t\t\t\tconst s = polygon.segments[0];\n\t\t\t\tconst m = c.getIntersection(s);\n\t\t\t\tif (m && (m.intersectA)) {\n\t\t\t\t\tconsole.log('i1', i);\n\t\t\t\t\ts.a.x = m.x;\n\t\t\t\t\ts.a.y = m.y;\n\t\t\t\t\treturn i;\n\t\t\t\t} else {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}, -1);\n\t\t\tconst i2 = this.segments.reduce((p, c, i) => {\n\t\t\t\tconst s = polygon.segments[polygon.segments.length - 1];\n\t\t\t\tconst m = c.getIntersection(s);\n\t\t\t\tif (m && (m.intersectA)) {\n\t\t\t\t\tconsole.log('i2', i);\n\t\t\t\t\ts.b.x = m.x;\n\t\t\t\t\ts.b.y = m.y;\n\t\t\t\t\treturn i;\n\t\t\t\t} else {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t}, -1);\n\t\t\tif (i1 !== -1 && i2 !== -1) {\n\t\t\t\tconsole.log('close!', i1, i2);\n\t\t\t\tconst cutPoints = polygon.getPoints(true);\n\t\t\t\tconsole.log('cutPoints.length', cutPoints.length, polygon.segments.length);\n\t\t\t\tconst min = Math.min(i1, i2);\n\t\t\t\tconst max = Math.max(i1, i2);\n\t\t\t\tconst points = [];\n\t\t\t\tfor (let i = 0; i <= min; i++) {\n\t\t\t\t\tconst s = this.segments[i];\n\t\t\t\t\tpoints.push(s.a);\n\t\t\t\t}\n\t\t\t\tconst first = cutPoints[0];\n\t\t\t\tconst last = cutPoints[cutPoints.length - 1];\n\t\t\t\tif (last.distanceTo(points[points.length - 1]) < first.distanceTo(points[points.length - 1])) {\n\t\t\t\t\tcutPoints.reverse();\n\t\t\t\t}\n\t\t\t\tpoints.push.apply(points, cutPoints);\n\t\t\t\tfor (let i = max + 1; i < this.segments.length; i++) {\n\t\t\t\t\tconst s = this.segments[i];\n\t\t\t\t\tpoints.push(s.a);\n\t\t\t\t}\n\t\t\t\tpoints.push(points[0]);\n\t\t\t\tthis.rebuild(points);\n\t\t\t}\n\t\t}\n\t}\n\n\tdraw() {\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.lineWidth = \"5\";\n\t\tctx.strokeStyle = \"green\";\n\t\tctx.fillStyle = \"black\";\n\t\tconst t = this.segments.length;\n\t\tfor (let i = 0; i < t; i++) {\n\t\t\tconst s = this.segments[i];\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(s.a.x, s.a.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(s.a.x, s.a.y);\n\t\t\t}\n\t\t\tif (i === t - 1) {\n\t\t\t\tctx.lineTo(s.b.x, s.b.y);\n\t\t\t}\n\t\t}\n\t\tctx.stroke();\n\t\tctx.fill();\n\t}\n\n\tx(x) {\n\t\treturn this.rect.left + x * this.rect.width;\n\t}\n\n\ty(y) {\n\t\treturn this.rect.top + y * this.rect.height;\n\t}\n\n}\n","import Segment from './segment';\nimport { State } from './state';\nimport Vector2 from './vector2';\n\nexport default class Player {\n\n\tget nx() {\n\t\treturn this.position.x + this.direction.x * this.speed;\n\t}\n\n\tget ny() {\n\t\treturn this.position.y + this.direction.y * this.speed;\n\t}\n\n\tconstructor() {\n\t\tconst ground = State.ground;\n\t\tthis.position = new Vector2(ground.x(0.5), ground.y(1));\n\t\tthis.direction = new Vector2(0, 0);\n\t\tthis.speed = 5;\n\t\tthis.segment = new Segment();\n\t\tthis.active = false;\n\t}\n\n\tupdate() {\n\t\tthis.checkDirection();\n\t\tthis.move();\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tconst ground = State.ground;\n\t\tconst canvas = State.canvas;\n\t\tconst ctx = canvas.ctx;\n\t\tctx.beginPath();\n\t\tctx.strokeStyle = \"black\";\n\t\tctx.arc(this.position.x, this.position.y, 5, 0, 2 * Math.PI, true);\n\t\tctx.stroke();\n\t\tctx.fillStyle = \"green\";\n\t\tctx.fill();\n\t}\n\n\tcheckDirection() {\n\t\tthis.active = State.keys.shift || State.keys.space;\n\t\tconst direction = this.direction;\n\t\tif (State.keys.left) {\n\t\t\tdirection.x = -1;\n\t\t\tdirection.y = 0;\n\t\t} else if (State.keys.right) {\n\t\t\tdirection.x = 1;\n\t\t\tdirection.y = 0;\n\t\t} else if (State.keys.up) {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = -1;\n\t\t} else if (State.keys.down) {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = 1;\n\t\t} else {\n\t\t\tdirection.x = 0;\n\t\t\tdirection.y = 0;\n\t\t}\n\t}\n\n\tmove() {\n\t\tconst ground = State.ground;\n\t\tconst cut = State.cut;\n\t\tlet nx = this.nx;\n\t\tlet ny = this.ny;\n\t\tconst segment = this.segment;\n\t\tsegment.a.set(this.position.x, this.position.y);\n\t\tsegment.b.set(nx, ny);\n\t\tlet hitted;\n\t\tif (this.active && (this.direction.x || this.direction.y)) {\n\t\t\tif (hitted = ground.hit(this, 2)) {\n\t\t\t\tconsole.log('hitted');\n\t\t\t\tif (hitted instanceof Segment && cut.segments.length) {\n\t\t\t\t\tconst i = hitted.getIntersection(this.segment);\n\t\t\t\t\tif (i && (i.intersectA || i.intersectB)) {\n\t\t\t\t\t\tthis.position.x = i.x;\n\t\t\t\t\t\tthis.position.y = i.y;\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastSegment = hitted;\n\t\t\t\t\t// console.log('i', i);\n\t\t\t\t\tconst segment = cut.segments[cut.segments.length - 1];\n\t\t\t\t\tnx = this.nx;\n\t\t\t\t\tny = this.ny;\n\t\t\t\t\tsegment.b.x = nx;\n\t\t\t\t\tsegment.b.y = ny;\n\t\t\t\t\t// this.position.x = nx;\n\t\t\t\t\t// this.position.y = ny;\n\t\t\t\t\tthis.direction.x = 0;\n\t\t\t\t\tthis.direction.y = 0;\n\t\t\t\t\tconsole.log('cut.segments.length', cut.segments.length);\n\t\t\t\t\tground.remove(cut);\n\t\t\t\t\tcut.segments = [];\n\t\t\t\t}\n\t\t\t} else if (!ground.inside(this)) {\n\t\t\t\tconsole.log('outside');\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t} else if (cut.hitSegments(this, 3)) {\n\t\t\t\tcut.reset(this);\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t} else {\n\t\t\t\tcut.move(this);\n\t\t\t}\n\t\t} else {\n\t\t\thitted = ground.hit(this, 3);\n\t\t\tthis.firstSegment = hitted;\n\t\t\tif (!hitted) {\n\t\t\t\tthis.direction.x = 0;\n\t\t\t\tthis.direction.y = 0;\n\t\t\t}\n\t\t}\n\t\tthis.position.x = this.nx;\n\t\tthis.position.y = this.ny;\n\t}\n\n}\n","import Canvas from './canvas';\nimport Cut from './cut';\nimport Enemy from './enemy';\nimport Ground from './ground';\nimport Player from './player';\nimport { State } from './state';\n\nexport default class Game {\n\n\tconstructor() {\n\t\tconst canvas = this.canvas = State.canvas = new Canvas();\n\t\tconst ground = this.ground = State.ground = new Ground();\n\t\tconst cut = this.cut = State.cut = new Cut();\n\t\tconst enemies = State.enemies = new Array(3).fill(0).map(x => new Enemy());\n\t\tconst player = State.player = new Player();\n\t\t// this.loadAssets();\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.loop = this.loop.bind(this);\n\t\tthis.onKeydown = this.onKeydown.bind(this);\n\t\tthis.onKeyup = this.onKeyup.bind(this);\n\t\tdocument.addEventListener(\"keydown\", this.onKeydown);\n\t\tdocument.addEventListener(\"keyup\", this.onKeyup);\n\t\tthis.loop();\n\t}\n\n\tloop() {\n\t\tif (!State.ended) {\n\t\t\tif (!State.paused) {\n\t\t\t\tState.canvas.update();\n\t\t\t\tState.ground.update();\n\t\t\t\tState.cut.update();\n\t\t\t\tState.enemies.forEach(x => x.update());\n\t\t\t\tState.player.update();\n\t\t\t\t/*\n\t\t\t\tthis.grid.paint();\n\t\t\t\tthis.player.update();\n\t\t\t\tthis.player.paint();\n\t\t\t\tthis.grid.enemies.forEach((enemy) => {\n\t\t\t\t    enemy.update();\n\t\t\t\t    enemy.paint();\n\t\t\t\t});\n\t\t\t\tthis.qix.update();\n\t\t\t\tthis.qix.draw();\n\t\t\t\tthis.measureFPS();\n\t\t\t\tthis.grid.displayScore();\n\t\t\t\tthis.grid.displayTimer();\n\t\t\t\t*/\n\t\t\t\trequestAnimationFrame(this.loop);\n\t\t\t}\n\t\t} else {\n\t\t\t// State.soundtrack.pause();\n\t\t\tif (State.won) {\n\t\t\t\t/*\n\t\t\t\tState.gameWon.play();\n\t\t\t\tthis.grid.ctx.font = \"150px Georgia\";\n\t\t\t\tthis.grid.ctx.strokeStyle = 'white';\n\t\t\t\tthis.grid.ctx.lineWidth = 8;\n\t\t\t\tthis.grid.ctx.strokeText(\"Victory!\", 80, 280);\n\t\t\t\tthis.grid.ctx.fillStyle = 'green';\n\t\t\t\tthis.grid.ctx.fillText(\"Victory!\", 80, 280);\n\t\t\t\t*/\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\tState.gameLost.play();\n\t\t\t\tthis.grid.ctx.font = \"150px Georgia\";\n\t\t\t\tthis.grid.ctx.strokeStyle = 'white';\n\t\t\t\tthis.grid.ctx.lineWidth = 8;\n\t\t\t\tthis.grid.ctx.strokeText(\"Game\", 140, 200);\n\t\t\t\tthis.grid.ctx.strokeText(\"Over\", 175, 350);\n\t\t\t\tthis.grid.ctx.fillStyle = 'red';\n\t\t\t\tthis.grid.ctx.fillText(\"Game\", 140, 200);\n\t\t\t\tthis.grid.ctx.fillText(\"Over\", 175, 350);\n\t\t\t\t*/\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tif (State.paused) {\n\t\t\tState.paused = false;\n\t\t\tthis.loop();\n\t\t} else {\n\t\t\tState.paused = true;\n\t\t}\n\t}\n\n\tonKeydown(event) {\n\t\tconst keys = State.keys;\n\t\tObject.keys(keys).forEach(key => {\n\t\t\tkeys[key] = false;\n\t\t});\n\t\tkeys.shift = event.shiftKey;\n\t\tswitch (event.keyCode) {\n\t\t\tcase 32:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.space = true;\n\t\t\t\tbreak;\n\t\t\tcase 37:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.left = true;\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.up = true;\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.right = true;\n\t\t\t\tbreak;\n\t\t\tcase 40:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.down = true;\n\t\t\t\tbreak;\n\t\t\tcase 112:\n\t\t\t\tthis.toggle();\n\t\t\t\tbreak;\n\t\t\tcase 80:\n\t\t\t\tthis.toggle();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tonKeyup(event) {\n\t\tconst keys = State.keys;\n\t\tswitch (event.keyCode) {\n\t\t\tcase 32:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.space = false;\n\t\t\t\tbreak;\n\t\t\tcase 37:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.left = false;\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.up = false;\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.right = false;\n\t\t\t\tbreak;\n\t\t\tcase 40:\n\t\t\t\tevent.preventDefault();\n\t\t\t\tkeys.down = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n}\n","import Game from \"./game/game\";\n\nconst game = new Game();"],"names":["Vector2","x","y","set","setScalar","scalar","setX","setY","setComponent","index","value","Error","getComponent","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","random","Canvas","canvas","document","querySelector","size","offsetWidth","offsetHeight","width","height","ctx","getContext","update","clearRect","drawPoint","p","beginPath","arc","lineWidth","strokeStyle","stroke","drawSegment","moveTo","lineTo","LinkedList","buildLog","epsilon","Epsilon","BuildLog","Intersecter","SegmentSelector","SegmentChainer","geojson","GeoJSON","Segment","ax","ay","bx","by","draw","bounce","i","intersect","r","reflect","d","getIntersection","intersectA","intersectB","intersection","rayTip","n","normal","dotNormal","reflection","vector","iX","iY","rayTipX","rayTipY","rayX","rayY","denominator","numerator1","numerator2","result","hit","actor","tolerance","calcIsInsideThickLineSegment","segment","px","py","L2","State","ended","won","paused","then","Date","now","soundtrack","gameWon","gameLost","timer","frameCount","keys","score","Polygon","points","segments","forEach","push","boolean","poly1","regions","getPoints","map","poly2","operation","PolyBool","difference","log","rebuild","reduce","hitSegments","inside","isPointInside","fillStyle","t","fill","closed","minX","maxX","minY","maxY","q","j","Cut","direction","start","end","move","position","nx","ny","close","reset","Enemy","speed","ground","checkCollision","cut","player","Rect","top","left","right","bottom","setCenter","contains","rect","intersectRect","r1","r2","fromNode","node","rect_","rects","getClientRects","boundingRect","getBoundingClientRect","setSize","h","intersection_","pow","scroll","Ground","init","remove","polygon","i1","i2","cutPoints","first","last","reverse","apply","Player","active","checkDirection","shift","space","up","down","hitted","lastSegment","firstSegment","Game","enemies","Array","loop","bind","onKeydown","onKeyup","addEventListener","requestAnimationFrame","toggle","event","Object","key","shiftKey","keyCode","preventDefault","game"],"mappings":"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"}